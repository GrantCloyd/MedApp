{"version":3,"sources":["constants.js","functions.js","components/store/studentReducer.js","components/styles.js","components/StudentMedButtons.js","components/FavoriteCard.js","components/LandingS.js","components/store/teacherReducer.js","components/LandingT.js","components/Landing.js","components/MedLineItem.js","components/MeditationLi.js","components/TeacherProfile.js","components/RecentPlays.js","components/StudentProfile.js","components/ProfilePage.js","components/RecordingDialog.js","components/CreatePage.js","components/SearchTeacher.js","components/SearchLengthType.js","components/SearchMeditations.js","components/store/guestUsers.js","components/LogInPage.js","components/SignUpPage.js","components/ChatContainer.js","components/InteractPage.js","components/Navbar.js","components/FollowInfo.js","components/ViewTeacher.js","components/PlayMeditation.js","App.js","components/store/gloablstore.js","index.js"],"names":["HEADERS","Accept","MenuItem","handleChange","e","setter","obj","target","name","value","createConfig","method","headers","body","JSON","stringify","makeLinkForBlob","blob","makeIconBtn","Icon","clickHandler","submitBool","IconButton","type","onClick","initialState","email","id","total_listens","total_time","recent_plays","follows","chats","favorites","donations","total_donations","studentSlice","createSlice","reducers","loginS","state","action","payload","addPlay","unshift","length","logoutS","addFollow","removeFollow","filter","f","addChat","setChatsS","addFavorite","removeFav","addDonation","push","donation","Number","amount","most_donated_teacher","most_donated_by_amount","actions","primaryColor","secondaryColor","StyledAppBar","styled","AppBar","background","padding","marginBottom","StyledButton","Button","boxShadow","width","color","StyledRad","Radio","after","CenterCon","TextField","backgroundColor","Container","marginLeft","marginTop","textAlign","itemAlign","TightCard","Card","margin","TightButton","FaceIcon","ReverseTightButton","StyledSwitch","withStyles","switchBase","checked","track","Switch","StyledTextField","root","borderBottomColor","borderColor","StyledSelect","select","Select","StyledDropDown","StyledArrow","PlayCircleFilledIcon","StyledSend","SendIcon","border","borderRadius","StyledCancel","BlockIcon","StyledPaper","Paper","TightPaper","StyledLogo","marginRight","StyledPlayer","ReactPlayer","StyledSave","SaveIcon","SmallLogo","height","PaddedDialogContent","DialogContent","StyledHelp","LiveHelpIcon","StyledOutlineBtn","CenterLogo","StyledFavIcon","FavoriteIcon","StyledNotFavIcon","FavoriteBorderIcon","StudentMedButtons","medId","teaId","teaImg","user","useSelector","student","favMedsIds","map","meditation_id","dispatch","useDispatch","history","useHistory","a","fetch","student_id","res","json","data","CardActions","Avatar","alt","src","includes","handleDeleteFav","find","handleFavorite","FavoriteCard","meditation","teacher_image","teacher_name","title","est_length","teacher_id","undefined","CardContent","CardHeader","TeacherImage","CardMedia","LandingS","followsTeacherId","most_pop_med","followerStatus","alert","error","followsDisplay","teacher","image","image_url","toString","FormControlLabel","control","onChange","handleUnfollow","label","favoriteDisplay","m","key","Grid","container","direction","justifyContent","alignItems","income","total_favorites","meditations","opt_in","follow_message","teacherSlice","loginT","updateMed","deleteMed","last_med","slice","logoutT","addMed","addMessage","c","chat_id","messages","deleteChat","setChatsT","updateIncome","hideDonation","d","StyledMoney","MonetizationOnIcon","StyledLightBulb","WbIncandescentIcon","LandingT","useState","lastTime","setLastTime","message","setMessage","toFixed","setTimeout","useEffect","currTime","Date","currDay","getDate","currMonth","getMonth","currYear","getFullYear","phrase","string","lastMedTime","created_at","mLastDay","mLastMonth","mLastYear","toLocaleString","Dialog","open","DialogTitle","Landing","StyledInfo","InfoIcon","StyledAvatar","PaddedPaper","ConditionalWrapper","condition","wrapper1","wrapper2","children","MedLineItem","med_type","description","TimerIcon","listens","MeditationLi","togglePreview","setTogglePreview","toggleEdit","setToggleEdit","patchObj","setPatchObj","handlePatchChange","preventDefault","onSubmit","multiline","fullWidth","InputLabel","htmlFor","idLabel","controls","url","audio_file","ButtonGroup","TeacherProfile","medDisplay","student_name","most_donated_student","total_income","RecentPlays","StudentProfile","mostRecent","recentMeds","recentPlay","recentPlays","showRecent","setShowRecent","elevation","ProfileImage","objectFit","ProfilePage","profileEdit","setProfileEdit","handleProfileChange","handleSubmit","image_name","align","DialogActions","PermIdentityIcon","MailOutlineIcon","StyledPause","PauseIcon","StyledRecordingIcon","FiberManualRecordIcon","RecordingDialog","setErrors","setPrepRecord","prepRecord","setNewMed","newMed","setAttachedCustom","recordingState","setRecordingState","mediaRecorder","setMediaRecorder","mediaChunks","setMediaChunks","minutes","setMinutes","seconds","setSeconds","previewUrl","setPreviewUrl","prepForRecording","navigator","mediaDevices","getUserMedia","audio","stream","MediaRecorder","mimeType","startRecording","start","stopAndCreateRecording","stop","ondataavailable","attachRecordingAndPreview","objectURL","URL","createObjectURL","redoRecording","interval","setInterval","clearInterval","CheckIcon","resume","pause","CloseIcon","StyledProg","LinearProgress","CreatePage","success","setSuccess","errors","loading","setLoading","attachedCustom","handleNewMed","formData","FormData","append","axios","post","then","DialogContentText","PageviewIcon","AddCircleIcon","accept","style","display","files","component","TeacherPictureSmall","SearchTeacher","teachers","reduce","acc","t","concat","i","sortedTeachers","setSortedTeachers","teachersDisplay","med_number","sort","b","localeCompare","SearchLengthType","toggleOpen","setToggleOpen","time","setTime","setType","setFiltered","handleSelection","handleFilter","filtered","array","filteredLength","filteredType","FormControl","labelId","SearchMeditations","displayTeacher","setDisplayTeacher","displayLength","setDisplayLength","setMeditations","getData","teacherGuest","password","studentGuest","CenteringHeaderDiv","CenteringGuestDiv","LogInPage","logIn","setLogIn","handleLogInChange","configObj","handleGuest","guest","placeholder","autoComplete","size","FormLabel","RadioGroup","to","SignUpPage","confirmPassword","signUp","setSignUp","handleSignUpChange","ok","ChatContainer","handleDelete","handleAdd","userName","userType","initialMessage","content","username","variant","handleCloseChat","InteractPage","fetchChats","setFetchChats","setAddMessage","deleteMessage","setDeleteMessage","donationsDisplay","chatDisplay","StyledMenuBtn","StyledExit","ExitToAppIcon","ExitLink","NavLink","Navbar","anchorEl","setAnchorEl","handleClose","position","Toolbar","edge","event","currentTarget","Menu","keepMounted","Boolean","onClose","HomeIcon","AccountCircle","FindInPageIcon","ContactMailIcon","FollowInfo","followMessage","optStatus","teacherName","teacherId","userId","initialDonation","initialQuestion","toggleDonate","setToggleDonate","toggleQuestion","setToggleQuestion","setDonation","question","setQuestion","response","setResponse","handleQuestion","handleDonation","handleSubmitQuestion","chat","createDonation","Snackbar","anchorOrigin","vertical","horizontal","Alert","severity","min","ViewTeacher","useParams","setTeacher","follow","handleFollow","getTeacher","meditationsDisplay","className","StyledProgress1","CircularProgress","StyledProgress2","PlayMeditation","medData","setMedData","playTime","setPlayTime","setSucess","setPause","percent","setPercent","handleListen","successStatement","Math","round","getMed","Box","thickness","top","left","bottom","right","dir","flip","onPause","onProgress","played","playedSeconds","onSeek","onEnded","playing","StyledDiv","App","console","log","handleRefresh","maxWidth","exact","path","configureStore","reducer","teacherReducer","studentReducer","ReactDOM","render","store","gloablstore","document","getElementById"],"mappings":"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","file":"static/js/main.047043db.chunk.js","sourcesContent":["import { MenuItem } from \"@material-ui/core\"\n\nexport const HEADERS = {\n   \"Content-Type\": \"application/json\",\n   Accept: \"application/json\",\n}\n\nexport const medTypes = (\n   <div>\n      <MenuItem value=\"--select-one--\"> --select-one--</MenuItem>\n      <MenuItem value=\"Breath\">Breath</MenuItem>\n      <MenuItem value=\"Awareness\">Awareness</MenuItem>\n      <MenuItem value=\"Emotions\">Emotions</MenuItem>\n      <MenuItem value=\"Metta\">Metta</MenuItem>\n      <MenuItem value=\"Insight\">Insight</MenuItem>\n      <MenuItem value=\"Bodyscan\">Body Scan</MenuItem>\n      <MenuItem value=\"Listening\">Listening</MenuItem>\n      <MenuItem value=\"Seeing\">Seeing</MenuItem>\n      <MenuItem value=\"Walking\">Walking</MenuItem>\n      <MenuItem value=\"Concentration\">Concentration</MenuItem>\n      <MenuItem value=\"Nondual\">Non-Dual</MenuItem>\n      <MenuItem value=\"Sleep\">Sleep</MenuItem>\n   </div>\n)\n","import { HEADERS } from \"./constants\"\nimport { IconButton } from \"@material-ui/core\"\n\nexport const handleChange = (e, setter, obj) => setter({ ...obj, [e.target.name]: e.target.value })\n\nexport const createConfig = (method, obj = \"\") => {\n   return {\n      method: method,\n      headers: HEADERS,\n      body: JSON.stringify(obj),\n   }\n}\n\nexport const makeLinkForBlob = blob => {\n   return `http://localhost:3000${blob}`\n}\n\n// add Styled or Unstyled Icon Component, the action for the button, and (opt) if it needs to be submitted in a form\n\nexport const makeIconBtn = (Icon, clickHandler, submitBool = null) => {\n   return (\n      <IconButton type={submitBool ? \"submit\" : null} onClick={clickHandler}>\n         <Icon />\n      </IconButton>\n   )\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n   name: \"\",\n   email: \"\",\n   id: \"\",\n   total_listens: 0,\n   total_time: 0,\n   recent_plays: [],\n   follows: [],\n   chats: [],\n   type: \"student\",\n   favorites: [],\n   donations: [],\n   total_donations: 0,\n}\n\nexport const studentSlice = createSlice({\n   name: \"student\",\n   initialState: initialState,\n   reducers: {\n      loginS: (state, action) => (state = { ...action.payload, type: \"student\" }),\n      addPlay: (state, action) => {\n         state.recent_plays.unshift(action.payload)\n         state.total_listens += 1\n         state.total_time += action.payload.length\n      },\n      logoutS: state => (state = initialState),\n      addFollow: (state, action) => {\n         return {\n            ...state,\n            follows: [...state.follows, action.payload],\n         }\n      },\n      removeFollow: (state, action) => {\n         return {\n            ...state,\n            follows: state.follows.filter(f => f.id !== action.payload),\n         }\n      },\n      addChat: (state, action) => {\n         return { ...state, chats: [...state.chats, action.payload] }\n      },\n      setChatsS: (state, action) => {\n         return { ...state, chats: [action.payload] }\n      },\n      addFavorite: (state, action) => {\n         return { ...state, favorites: [...state.favorites, action.payload] }\n      },\n      removeFav: (state, action) => {\n         return { ...state, favorites: state.favorites.filter(f => f.id !== action.payload.id) }\n      },\n      addDonation: (state, action) => {\n         state.donations.push(action.payload.donation)\n         state.total_donations =\n            Number(state.total_donations) + Number(action.payload.donation.amount)\n         state.most_donated_teacher = action.payload.most_donated_teacher\n         state.most_donated_by_amount = action.payload.most_donated_by_amount\n      },\n   },\n})\n\nexport const {\n   addChat,\n   addDonation,\n   addFavorite,\n   loginS,\n   setChatsS,\n   addPlay,\n   addFollow,\n   removeFav,\n   removeFollow,\n   logoutS,\n} = studentSlice.actions\n\nexport default studentSlice.reducer\n","import { styled } from \"@material-ui/core/styles\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport {\n   Button,\n   Radio,\n   TextField,\n   Container,\n   Card,\n   AppBar,\n   Switch,\n   Select,\n   Paper,\n   DialogContent,\n} from \"@material-ui/core/\"\nimport FaceIcon from \"@material-ui/icons/Face\"\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\"\nimport SendIcon from \"@material-ui/icons/Send\"\nimport BlockIcon from \"@material-ui/icons/Block\"\nimport ReactPlayer from \"react-player\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport LiveHelpIcon from \"@material-ui/icons/LiveHelp\"\n\nexport const primaryColor = \"#56A3A6\"\nexport const secondaryColor = \"#21CBF3\"\nexport const gradient = {\n   background: `linear-gradient(45deg, ${primaryColor} 30%, ${secondaryColor} 90%)`,\n   padding: \"100px\",\n}\n\nexport const StyledAppBar = styled(AppBar)({\n   background: `linear-gradient(45deg, ${primaryColor} 30%, ${secondaryColor} 90%)`,\n   padding: \"15px\",\n   marginBottom: \"3%\",\n})\n\nexport const StyledButton = styled(Button)({\n   background: `linear-gradient(45deg, ${primaryColor} 30%, ${secondaryColor} 90%)`,\n   boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .3)\",\n   padding: \"8px 12px\",\n   width: \"43%\",\n   color: \"white\",\n})\n\nexport const StyledRad = styled(Radio)({\n   color: `${secondaryColor}`,\n   after: `${secondaryColor}`,\n})\n\nexport const StyledText = styled(TextField)({\n   color: `${primaryColor}`,\n   backgroundColor: \"white\",\n})\n\nexport const CenterCon = styled(Container)({\n   marginLeft: \"30%\",\n   marginTop: \"10%\",\n   marginBottom: \"15%\",\n   textAlign: \"start\",\n   itemAlign: \"center\",\n})\n\nexport const TightCard = styled(Card)({\n   width: \"45%\",\n   margin: \"2.5px auto\",\n   backgroundColor: \"#FBFEF9\",\n})\n\nexport const StyledFaceIcon = styled(FaceIcon)({\n   color: `#8B5D33`,\n})\n\nexport const TightButton = styled(Button)({\n   background: `linear-gradient(45deg, ${primaryColor} 30%, ${secondaryColor} 90%)`,\n   boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .3)\",\n   padding: \"8px 12px\",\n   color: \"white\",\n})\n\nexport const ReverseTightButton = styled(Button)({\n   background: `linear-gradient(45deg, ${secondaryColor} 30%, ${primaryColor} 90%)`,\n   boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .3)\",\n   padding: \"8px 12px\",\n   color: \"white\",\n})\n\nexport const StyledSwitch = withStyles({\n   switchBase: {\n      color: `${primaryColor} `,\n      \"&$checked\": {\n         color: `${secondaryColor} `,\n      },\n      \"&$checked + $track\": {\n         backgroundColor: `${primaryColor} `,\n      },\n   },\n   checked: {},\n   track: {},\n})(Switch)\n\nexport const StyledTextField = withStyles({\n   root: {\n      \"& label.Mui-focused\": {\n         color: `${primaryColor}`,\n      },\n      \"& .MuiInput-underline:after\": {\n         borderBottomColor: `${primaryColor}`,\n      },\n      \"&.Mui-focused fieldset\": {\n         borderColor: `${primaryColor}`,\n      },\n   },\n})(TextField)\n\nexport const StyledSelect = withStyles({\n   select: {\n      \"&:before\": {\n         borderColor: `${primaryColor}`,\n      },\n      \"&:after\": {\n         borderColor: `${primaryColor}`,\n      },\n   },\n})(Select)\n\nexport const StyledDropDown = styled(Select)({\n   marginLeft: \"40px\",\n})\n\nexport const StyledArrow = styled(PlayCircleFilledIcon)({\n   color: `${secondaryColor}`,\n})\n\nexport const StyledSend = styled(SendIcon)({\n   color: `${secondaryColor}`,\n   border: `1px solid ${secondaryColor}`,\n   borderRadius: \"50%\",\n   padding: \"10px\",\n})\n\nexport const StyledCancel = styled(BlockIcon)({\n   color: `#BA1B1D`,\n   border: `1px solid #BA1B1D`,\n   borderRadius: \"50%\",\n   padding: \"10px\",\n})\n\nexport const StyledPaper = styled(Paper)({\n   padding: \"15px\",\n   margin: \"5px 5px\",\n})\n\nexport const TightPaper = styled(Paper)({\n   padding: \"15px\",\n   margin: \"2.5px auto\",\n   width: \"50%\",\n})\n\nexport const StyledLogo = styled(\"img\")({\n   width: \"50%\",\n   marginRight: \"150x\",\n})\n\nexport const StyledPlayer = styled(ReactPlayer)({\n   background: `linear-gradient(45deg, ${primaryColor} 30%, ${secondaryColor} 90%)`,\n})\n\nexport const StyledSave = styled(SaveIcon)({\n   color: `green`,\n   border: `1px solid green`,\n   borderRadius: \"50%\",\n   padding: \"10px\",\n})\n\nexport const SmallLogo = styled(\"img\")({\n   width: \"15%\",\n   height: \"15%\",\n})\n\nexport const PaddedDialogContent = styled(DialogContent)({\n   padding: \"30px 90px\",\n\n   width: \"65%\",\n})\n\nexport const StyledHelp = styled(LiveHelpIcon)({\n   color: `${primaryColor}`,\n})\n\nexport const StyledOutlineBtn = styled(Button)({\n   border: `1px solid ${secondaryColor}`,\n   background: \"transparent\",\n   boxShadow: \"0 3px 5px 2px rgba(33, 203, 243, .3)\",\n   padding: \"8px 5px\",\n   width: \"35%\",\n   color: `${primaryColor}`,\n   marginLeft: \"5%\",\n})\n\nexport const CenterLogo = styled(\"div\")({\n   marginLeft: \"-12%\",\n})\n","import React from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { createConfig } from \"../functions\"\nimport { addFavorite, removeFav } from \"./store/studentReducer\"\nimport { useHistory } from \"react-router\"\nimport { CardActions, IconButton, Avatar } from \"@material-ui/core\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { StyledArrow } from \"./styles\"\nimport FavoriteIcon from \"@material-ui/icons/Favorite\"\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\nimport { makeIconBtn } from \"../functions\"\n\nconst StyledFavIcon = styled(FavoriteIcon)({\n   color: `#BA1B1D`,\n})\n\nconst StyledNotFavIcon = styled(FavoriteBorderIcon)({\n   color: `#BA1B1D`,\n})\n\nexport default function StudentMedButtons({ medId, teaId, teaImg }) {\n   const user = useSelector(state => state.student)\n   const favMedsIds = user.favorites.map(f => f.meditation_id)\n   const dispatch = useDispatch()\n   const history = useHistory()\n\n   async function handleFavorite(id) {\n      const res = await fetch(\n         \"/favorites\",\n         createConfig(\"POST\", { student_id: user.id, meditation_id: id })\n      )\n      const data = await res.json()\n      dispatch(addFavorite(data))\n   }\n\n   async function handleDeleteFav(id) {\n      const res = await fetch(`/favorites/${id}`, createConfig(\"DELETE\"))\n      const data = await res.json()\n\n      dispatch(removeFav(data))\n   }\n\n   const findFavId = () => user.favorites.find(f => f.meditation_id === medId).id\n\n   return (\n      <CardActions>\n         {\" \"}\n         {makeIconBtn(StyledArrow, () => history.push(`/playingnow/${medId}`))}\n         <IconButton onClick={() => history.push(`/teachers/${teaId}`)}>\n            {\" \"}\n            <Avatar alt=\"teacher-prof\" src={teaImg} />{\" \"}\n         </IconButton>\n         {favMedsIds.includes(medId)\n            ? makeIconBtn(StyledFavIcon, () => handleDeleteFav(findFavId()))\n            : makeIconBtn(StyledNotFavIcon, () => handleFavorite(medId))}\n      </CardActions>\n   )\n}\n","import React from \"react\"\nimport StudentMedButtons from \"./StudentMedButtons\"\nimport { TightCard } from \"./styles\"\nimport { CardContent, CardHeader } from \"@material-ui/core\"\n\nexport default function FavoriteCard({\n   meditation,\n   teacher_image,\n   teacher_name,\n   title,\n   est_length,\n   id,\n   teacher_id,\n}) {\n   if (meditation === undefined) {\n      return (\n         <TightCard>\n            <CardContent>\n               {\" \"}\n               <CardHeader title={title} />\n               From: {teacher_name} <br /> {est_length} minutes\n            </CardContent>\n            <StudentMedButtons medId={id} teaId={teacher_id} teaImg={teacher_image} />{\" \"}\n         </TightCard>\n      )\n   }\n\n   return (\n      <TightCard>\n         <CardContent>\n            {\" \"}\n            <CardHeader title={meditation.title} />\n            {teacher_name} <br /> {meditation.est_length} minutes\n         </CardContent>\n         <StudentMedButtons\n            medId={meditation.id}\n            teaId={meditation.teacher_id}\n            teaImg={teacher_image}\n         />\n      </TightCard>\n   )\n}\n","import React from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { createConfig } from \"../functions\"\nimport { removeFollow } from \"./store/studentReducer\"\nimport { useHistory } from \"react-router-dom\"\nimport { FormControlLabel } from \"@material-ui/core\"\nimport FavoriteCard from \"./FavoriteCard\"\nimport { CardHeader, Grid, CardActions, CardMedia } from \"@material-ui/core\"\nimport { TightCard, StyledSwitch } from \"./styles\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst TeacherImage = styled(CardMedia)({\n   height: \"300px\",\n})\n\nexport default function LandingS({ favorites, follows, most_pop_med }) {\n   const followsTeacherId = useSelector(state => state.student.follows).map(f => f.teacher_id)\n   const followerStatus = id => followsTeacherId.includes(id)\n   const dispatch = useDispatch()\n   const history = useHistory()\n\n   async function handleUnfollow(id) {\n      const res = await fetch(`/follows/${id}`, createConfig(\"DELETE\"))\n      const data = await res.json()\n      if (data.id) {\n         dispatch(removeFollow(data.id))\n      } else {\n         alert(data.error)\n      }\n   }\n\n   let followsDisplay = []\n\n   if (follows.length > 0) {\n      followsDisplay = follows.map(f => (\n         <TightCard>\n            <div onClick={() => history.push(`/teachers/${f.teacher.id}`)}>\n               <CardHeader title={f.teacher.name} />\n               <TeacherImage alt={f.teacher.name} image={f.teacher.image_url.toString()} />\n            </div>\n            <CardActions>\n               {\" \"}\n               <FormControlLabel\n                  control={\n                     <StyledSwitch\n                        color=\"primary\"\n                        name=\"followSwitch\"\n                        checked={followerStatus(f.teacher.id)}\n                        onChange={() => handleUnfollow(f.id)}\n                     />\n                  }\n                  label={followerStatus ? \"Following\" : \"Not Following\"}\n               />\n            </CardActions>\n         </TightCard>\n      ))\n   }\n\n   let favoriteDisplay = []\n\n   if (favorites.length > 0) {\n      favoriteDisplay = favorites.map(m => <FavoriteCard {...m} key={m.id} />)\n   }\n\n   // const popularDisplay = [most_pop_med].map(m => <FavoriteCard {...m} key={m.id} />)\n\n   return (\n      <div>\n         {favoriteDisplay.length === 0 && followsDisplay.length === 0 && (\n            <h4>Set up the teachers you'd like to follow and favorite meditations! </h4>\n         )}\n         <h3>Favorites:</h3>\n         {favoriteDisplay.length === 0 ? (\n            <p>No Favorites Yet </p>\n         ) : (\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n               {favoriteDisplay}\n            </Grid>\n         )}\n         <h3>Following:</h3>\n         {followsDisplay.length === 0 ? (\n            <p>No follows yet</p>\n         ) : (\n            <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n               {followsDisplay}\n            </Grid>\n         )}\n\n         {/* <h3>Most Popular Meditation:</h3>\n         {popularDisplay} */}\n      </div>\n   )\n}\n","import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n   name: \"\",\n   email: \"\",\n   id: \"\",\n   image_url: \"\",\n   background: \"\",\n   income: \"\",\n   total_listens: \"\",\n   total_favorites: \"\",\n   meditations: [],\n   follows: [],\n   type: \"teacher\",\n   opt_in: \"\",\n   follow_message: \"\",\n   chats: [],\n   donations: [],\n   total_donations: 0,\n}\n\nexport const teacherSlice = createSlice({\n   name: \"teacher\",\n   initialState: initialState,\n   reducers: {\n      loginT: (state, action) => (state = { ...action.payload, type: \"teacher\" }),\n      updateMed: (state, action) => {\n         return {\n            ...state,\n            meditations: state.meditations.map(m => {\n               if (m.id === action.payload.id) {\n                  return action.payload\n               } else {\n                  return m\n               }\n            }),\n         }\n      },\n      deleteMed: (state, action) => {\n         return {\n            ...state,\n            meditations: state.meditations.filter(m => m.id !== action.payload.id),\n            last_med: [[...state.last_med.slice(1), action.payload.last_med][0]],\n         }\n      },\n      logoutT: (state, action) => (state = initialState),\n      addMed: (state, action) => {\n         return {\n            ...state,\n            meditations: [action.payload, ...state.meditations],\n            last_med: [...state.last_med.slice(1), action.payload],\n         }\n      },\n      addMessage: (state, action) => {\n         state.chats.find(c => c.id === +action.payload.chat_id).messages.push(action.payload)\n      },\n      deleteChat: (state, action) => {\n         return { ...state, chats: state.chats.filter(c => c.id !== action.payload.id) }\n      },\n      setChatsT: (state, action) => {\n         return { ...state, chats: action.payload }\n      },\n      updateIncome: (state, action) => {\n         state.income = action.payload.income\n      },\n      hideDonation: (state, action) => {\n         return { ...state, donations: state.donations.filter(d => d.id !== action.payload) }\n      },\n   },\n})\n\nexport const {\n   loginT,\n   hideDonation,\n   updateIncome,\n   setChatsT,\n   updateMed,\n   deleteChat,\n   addMessage,\n   addMed,\n   deleteMed,\n   logoutT,\n} = teacherSlice.actions\n\nexport default teacherSlice.reducer\n","import React, { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { createConfig, makeIconBtn } from \"../functions\"\nimport { updateIncome } from \"./store/teacherReducer\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { Dialog, DialogTitle } from \"@material-ui/core\"\nimport { TightPaper, TightButton, PaddedDialogContent, StyledHelp } from \"./styles\"\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\"\nimport WbIncandescentIcon from \"@material-ui/icons/WbIncandescent\"\nimport { styled } from \"@material-ui/styles\"\n\nconst StyledMoney = styled(MonetizationOnIcon)({\n   color: `green`,\n})\n\nconst StyledLightBulb = styled(WbIncandescentIcon)({\n   color: \"#c79d1e\",\n})\n\nexport default function LandingT({ chats, last_med }) {\n   const user = useSelector(state => state.teacher)\n   const [lastTime, setLastTime] = useState(\"\")\n   const history = useHistory()\n   const [message, setMessage] = useState(false)\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      const currTime = new Date()\n      const currDay = currTime.getDate()\n      const currMonth = currTime.getMonth()\n      const currYear = currTime.getFullYear()\n      const phrase = string => `It's been ${string} since you last made new content.`\n\n      if (last_med.length > 0) {\n         let lastMedTime = new Date(last_med[0].created_at)\n\n         const mLastDay = lastMedTime.getDate()\n         const mLastMonth = lastMedTime.getMonth()\n         const mLastYear = lastMedTime.getFullYear()\n\n         if (currYear === mLastYear && currMonth === mLastMonth && currDay === mLastDay) {\n            setLastTime(\"Congrats on your new content!\")\n         } else if (currYear > mLastYear) {\n            setLastTime(phrase(\"over a year\"))\n         } else if (currMonth > mLastMonth && currDay > mLastDay) {\n            setLastTime(phrase(\"over a month\"))\n         } else if (currMonth > mLastMonth && currDay <= mLastDay) {\n            setLastTime(\n               phrase(`${30 - currDay + mLastDay} day${30 - currDay + mLastDay > 1 ? \"s\" : \"\"}`)\n            )\n         } else {\n            setLastTime(phrase(`${currDay - mLastDay} day${currDay - mLastDay > 1 ? \"s\" : \"\"}`))\n         }\n      }\n   }, [last_med])\n\n   async function handleWithdraw() {\n      setMessage(false)\n      const res = await fetch(`/teachers/${user.id}`, createConfig(\"PATCH\", { income: 0 }))\n      const data = await res.json()\n      if (data.id) {\n         setMessage(`You've successfully withdrawn: $${(Number(user.income) * 0.8).toFixed(2)}`)\n         setTimeout(() => {\n            setMessage(false)\n            dispatch(updateIncome(data))\n         }, 2200)\n      } else {\n         setMessage(`Your information has not been updated, ${data.error}`)\n      }\n   }\n\n   return (\n      <div>\n         <h3>Updates:</h3>\n         <TightPaper>\n            {makeIconBtn(StyledHelp, null)}\n            {chats.length > 0 && chats[0].title.length > 0 ? (\n               <p>\n                  You have {chats.length} open question{chats.length > 1 && \"s\"}.\n                  <br /> <br />\n                  <TightButton onClick={() => history.push(\"/interact\")}>\n                     Go to Messages\n                  </TightButton>{\" \"}\n               </p>\n            ) : (\n               <p>You have no questions currently</p>\n            )}\n         </TightPaper>\n         <TightPaper>\n            {makeIconBtn(StyledLightBulb, null)}\n            {last_med.length > 0 ? (\n               <>\n                  <p>{lastTime}</p>\n                  <p>\n                     You recorded \"{last_med[0].title}\" on{\" \"}\n                     {new Date(last_med[0].created_at).toLocaleString()} <br /> <br />\n                  </p>\n               </>\n            ) : (\n               <p> You haven't recorded any meditations yet. Start now!</p>\n            )}\n            <TightButton onClick={() => history.push(\"/create\")}>Make Something New</TightButton>{\" \"}\n         </TightPaper>\n\n         {message && (\n            <Dialog open={message}>\n               <DialogTitle> Withdrawl Information</DialogTitle>\n               <PaddedDialogContent>{message}</PaddedDialogContent>\n               <br />\n            </Dialog>\n         )}\n         <TightPaper>\n            {makeIconBtn(StyledMoney, null)}\n            {Number(user.income).toFixed(2) > 0 && (\n               <>\n                  <p>Current Income: ${Number(user.income).toFixed(2)}</p>\n                  <TightButton onClick={handleWithdraw}>Withdraw</TightButton>\n                  <p>**Withdrawls are split 80/20 with Here|Now</p>\n               </>\n            )}\n            {Number(user.income).toFixed(2) <= 0.0 && <p>You have no new income.</p>}\n         </TightPaper>\n      </div>\n   )\n}\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport LandingS from \"./LandingS\"\nimport LandingT from \"./LandingT\"\n\nexport default function Landing() {\n   const user = useSelector(state => (state.student.name === \"\" ? state.teacher : state.student))\n\n   return (\n      <div>\n         <h2>Hello {user.name}!</h2>\n         <h3>Welcome to Here|Now </h3>\n         {user.type === \"student\" && <LandingS {...user} />}\n         {user.type === \"teacher\" && <LandingT {...user} />}\n      </div>\n   )\n}\n","import React from \"react\"\nimport { CardContent, Paper, CardHeader, Avatar, IconButton, Card } from \"@material-ui/core\"\nimport { TightCard, primaryColor, StyledArrow } from \"./styles\"\nimport TimerIcon from \"@material-ui/icons/Timer\"\nimport InfoIcon from \"@material-ui/icons/Info\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { makeIconBtn } from \"../functions\"\n\nconst StyledInfo = styled(InfoIcon)({\n   color: `${primaryColor}`,\n   marginBottom: \"-5px\",\n})\n\nconst StyledAvatar = styled(Avatar)({\n   marginBottom: \"-15%\",\n   height: \"50px\",\n   width: \"50px\",\n   marginLeft: \"8px\",\n})\n\nconst PaddedPaper = styled(Paper)({\n   padding: \"10px\",\n})\n\nconst ConditionalWrapper = ({ condition, wrapper1, wrapper2, children }) =>\n   condition ? wrapper1(children) : wrapper2(children)\n\nexport default function MedLineItem({ m, clickHandler = null }) {\n   return (\n      <ConditionalWrapper\n         condition={clickHandler}\n         wrapper1={children => <TightCard>{children}</TightCard>}\n         wrapper2={children => <Card>{children}</Card>}>\n         <StyledAvatar alt={m.teacher.name} src={m.teacher.image_url} />\n         <br />\n         <br />\n         <CardHeader title={m.title}> </CardHeader>\n\n         <CardContent>\n            <PaddedPaper>\n               {\" \"}\n               Type: {m.med_type} <br /> <br /> <StyledInfo /> {m.description}\n            </PaddedPaper>{\" \"}\n            {makeIconBtn(TimerIcon, null)}\n            {m.est_length} minutes{\" \"}\n            {clickHandler === null && m.listens !== undefined && (\n               <>\n                  {\" \"}\n                  <br /> Listens: {m.listens}\n               </>\n            )}\n            {clickHandler && (\n               <IconButton onClick={clickHandler !== null ? () => clickHandler(m.id) : null}>\n                  <StyledArrow />\n               </IconButton>\n            )}\n         </CardContent>\n      </ConditionalWrapper>\n   )\n}\n","import React, { useState } from \"react\"\nimport { updateMed, deleteMed } from \"./store/teacherReducer\"\nimport { useDispatch } from \"react-redux\"\nimport MedLineItem from \"./MedLineItem\"\nimport { MenuItem, InputLabel, Select, ButtonGroup, Paper } from \"@material-ui/core\"\nimport {\n   TightCard,\n   TightButton,\n   StyledSave,\n   StyledPlayer,\n   ReverseTightButton,\n   StyledTextField,\n} from \"./styles\"\n\nimport { handleChange, createConfig, makeLinkForBlob, makeIconBtn } from \"../functions\"\n\nexport default function MeditationLi({ m }) {\n   let initialState = { ...m }\n   const dispatch = useDispatch()\n\n   const [togglePreview, setTogglePreview] = useState(false)\n   const [toggleEdit, setToggleEdit] = useState(false)\n   const [patchObj, setPatchObj] = useState(initialState)\n\n   const handlePreview = () => setTogglePreview(!togglePreview)\n   const handleEdit = () => setToggleEdit(!toggleEdit)\n   const handlePatchChange = e => handleChange(e, setPatchObj, patchObj)\n\n   async function handleSubmitPatch(e) {\n      e.preventDefault()\n      const res = await fetch(`/meditations/${m.id}`, createConfig(\"PATCH\", patchObj))\n      const data = await res.json()\n      dispatch(updateMed(data))\n      setToggleEdit(!toggleEdit)\n   }\n\n   async function handleDelete() {\n      const res = await fetch(`meditations/${m.id}`, createConfig(\"DELETE\"))\n      const data = await res.json()\n\n      dispatch(deleteMed(data))\n   }\n\n   return (\n      <TightCard>\n         {!toggleEdit && <MedLineItem m={m} />}\n         {toggleEdit && (\n            <Paper>\n               <form onSubmit={handleSubmitPatch}>\n                  <StyledTextField\n                     onChange={handlePatchChange}\n                     type=\"text\"\n                     value={patchObj.title}\n                     name=\"title\"\n                     label=\"Title\"\n                  />\n\n                  <br />\n                  <StyledTextField\n                     onChange={handlePatchChange}\n                     type=\"text\"\n                     multiline\n                     fullWidth\n                     value={patchObj.description}\n                     name=\"description\"\n                     label=\"Description\"\n                  />\n                  <br />\n\n                  <br />\n\n                  <StyledTextField\n                     value={patchObj.est_length}\n                     onChange={handlePatchChange}\n                     type=\"number\"\n                     name=\"est_length\"\n                     label=\"Length in Minutes\"\n                  />\n                  <br />\n                  <InputLabel id=\"type-label\" htmlFor=\"med_type\">\n                     Type\n                  </InputLabel>\n                  <Select idLabel=\"type-label\" name=\"med_type\" onChange={handlePatchChange}>\n                     <MenuItem value=\"--select-one--\"> --select-one--</MenuItem>\n                     <MenuItem value=\"Breath\">Breath</MenuItem>\n                     <MenuItem value=\"Awareness\">Awareness</MenuItem>\n                     <MenuItem value=\"Emotions\">Emotions</MenuItem>\n                     <MenuItem value=\"Metta\">Metta</MenuItem>\n                     <MenuItem value=\"Insight\">Insight</MenuItem>\n                     <MenuItem value=\"Bodyscan\">Body Scan</MenuItem>\n                     <MenuItem value=\"Listening\">Listening</MenuItem>\n                     <MenuItem value=\"Seeing\">Seeing</MenuItem>\n                     <MenuItem value=\"Walking\">Walking</MenuItem>\n                     <MenuItem value=\"Concentration\">Concentration</MenuItem>\n                     <MenuItem value=\"Nondual\">Non-Dual</MenuItem>\n                     <MenuItem value=\"Sleep\">Sleep</MenuItem>\n                  </Select>\n\n                  <br />\n                  <br />\n                  {makeIconBtn(StyledSave, null, true)}\n               </form>\n               <br />\n            </Paper>\n         )}\n         <>\n            {togglePreview && (\n               <StyledPlayer\n                  controls={true}\n                  width=\"100%\"\n                  height=\"50px\"\n                  url={makeLinkForBlob(m.audio_file)}\n               />\n            )}{\" \"}\n            <ButtonGroup>\n               <TightButton onClick={handlePreview}>\n                  {!togglePreview ? \"Preview\" : \"Close Preview\"}\n               </TightButton>{\" \"}\n               <ReverseTightButton onClick={handleEdit}>\n                  {!toggleEdit ? \"Edit\" : \"Cancel Edit\"}\n               </ReverseTightButton>{\" \"}\n               <TightButton onClick={handleDelete}>Delete</TightButton>{\" \"}\n            </ButtonGroup>\n         </>\n      </TightCard>\n   )\n}\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport MeditationLi from \"./MeditationLi\"\nimport { Grid, CardHeader } from \"@material-ui/core\"\nimport { TightCard } from \"./styles\"\n\nexport default function TeacherProfile() {\n   const user = useSelector(state => state.teacher)\n\n   const medDisplay = user.meditations.map(m => <MeditationLi key={m.id} m={m} />)\n\n   return (\n      <div>\n         <TightCard>\n            <CardHeader title=\"Teacher Stats\" />\n            <p>Total Listens: {user.total_listens}</p>\n            {user.donations.length > 0 ? (\n               <>\n                  <p>\n                     Highest Donation Amount from a Student:{\" \"}\n                     {user.most_donated_by_amount.student_name} ($\n                     {Number(user.most_donated_by_amount.amount).toFixed(2)})\n                  </p>\n                  <p>\n                     {\" \"}\n                     Most Donatations from a Student: {user.most_donated_student.student_name} (\n                     {user.most_donated_student.amount})\n                  </p>{\" \"}\n                  <p>Lifetime Income: ${Number(user.total_income).toFixed(2)}</p>\n               </>\n            ) : (\n               <p> You've had no donations yet</p>\n            )}\n            <p>Follows: {user.follows.length}</p>\n         </TightCard>\n         <h3>Meditations:</h3>\n         <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            {medDisplay}\n         </Grid>\n      </div>\n   )\n}\n","import React from \"react\"\nimport { TightCard } from \"./styles\"\nimport { CardContent, CardHeader } from \"@material-ui/core\"\nimport StudentMedButtons from \"./StudentMedButtons\"\n\nexport default function RecentPlays({ meditation, created_at, teacher_name, teacher_image }) {\n   return (\n      <TightCard>\n         <CardContent>\n            <CardHeader title={meditation.title} />\n            {teacher_name} <br /> {meditation.est_length} minutes <br /> Listened on:{\" \"}\n            {new Date(created_at).toLocaleString()}\n         </CardContent>\n         <StudentMedButtons\n            medId={meditation.id}\n            teaId={meditation.teacher_id}\n            teaImg={teacher_image}\n         />\n      </TightCard>\n   )\n}\n","import React, { useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport RecentPlays from \"./RecentPlays\"\nimport { TightButton, TightPaper } from \"./styles\"\n\nexport default function StudentProfile() {\n   const user = useSelector(state => state.student)\n   const recentPlay = user.recent_plays\n   const recentPlays = user.recent_plays.slice(1, 5)\n   const [showRecent, setShowRecent] = useState(false)\n\n   let mostRecent, recentMeds\n\n   if (recentPlay.length > 0) {\n      mostRecent = [recentPlay[0]].map(m => <RecentPlays key={m.id} {...m} />)\n\n      recentMeds = recentPlays.map(m => (\n         <li key={m.id}>\n            <RecentPlays {...m} />\n         </li>\n      ))\n   }\n\n   return (\n      <div>\n         <TightPaper elevation={2}>\n            <h2>Stats:</h2>\n            {user.total_listens > 0 ? (\n               <p> Total Sessions: {user.total_listens}</p>\n            ) : (\n               <p>No meditations yet</p>\n            )}\n            <p>Total Time Meditated: {user.total_time} minutes </p>\n         </TightPaper>\n\n         <h3>Donations</h3>\n         {user.donations.length > 0 ? (\n            <TightPaper elevation={2}>\n               {\" \"}\n               <p> Total: ${Number(user.total_donations).toFixed(2)}</p>\n               <p> Number of Donations: {user.donations.length}</p>\n               <p>\n                  Most Donated by Amount to a Teacher: {user.most_donated_by_amount.teacher_name} ($\n                  {Number(user.most_donated_by_amount.amount).toFixed(2)})\n               </p>\n               <p>\n                  {\" \"}\n                  Most Donatations to a Teacher: {user.most_donated_teacher.teacher_name} (\n                  {user.most_donated_teacher.amount})\n               </p>{\" \"}\n            </TightPaper>\n         ) : (\n            <p>You've made no donations yet</p>\n         )}\n         <h3>Recent Sessions:</h3>\n         {mostRecent}\n         <TightButton onClick={() => setShowRecent(!showRecent)}>Show More Recent</TightButton>\n         {showRecent && <ul>{recentMeds}</ul>}\n      </div>\n   )\n}\n","import React, { useState } from \"react\"\nimport TeacherProfile from \"./TeacherProfile\"\nimport StudentProfile from \"./StudentProfile\"\nimport { createConfig, handleChange, makeIconBtn } from \"../functions\"\nimport { loginT } from \"./store/teacherReducer\"\nimport { loginS } from \"./store/studentReducer\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport {\n   Dialog,\n   FormControlLabel,\n   Paper,\n   DialogTitle,\n   CardHeader,\n   CardContent,\n   DialogActions,\n} from \"@material-ui/core\"\nimport {\n   TightButton,\n   StyledCancel,\n   StyledSave,\n   TightCard,\n   StyledSwitch,\n   StyledTextField,\n   PaddedDialogContent,\n} from \"./styles\"\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst ProfileImage = styled(\"img\")({\n   height: \"30%\",\n   width: \"30%\",\n   objectFit: \"contain\",\n})\n\nexport default function ProfilePage() {\n   let user = useSelector(state => (state.student.name === \"\" ? state.teacher : state.student))\n   const { name, email, image_url, background, id, follow_message } = user\n   const [profileEdit, setProfileEdit] = useState({\n      name,\n      email,\n      image_url,\n      background,\n      id,\n      follow_message,\n   })\n   const [toggleEdit, setToggleEdit] = useState(false)\n\n   const dispatch = useDispatch()\n\n   const handleProfileChange = e => handleChange(e, setProfileEdit, profileEdit)\n\n   async function handleSubmit(e) {\n      e.preventDefault()\n      const res = await fetch(`/${user.type}s/${user.id}`, createConfig(\"PATCH\", profileEdit))\n      const data = await res.json()\n      user.type === \"teacher\" ? dispatch(loginT(data)) : dispatch(loginS(data))\n      setToggleEdit(false)\n   }\n\n   async function handleOptStatus(e) {\n      const res = await fetch(\n         `/teachers/${user.id}`,\n         createConfig(\"PATCH\", { opt_in: e.target.checked })\n      )\n      const data = await res.json()\n\n      dispatch(loginT(data))\n   }\n\n   return (\n      <div>\n         {user.type === \"teacher\" && (\n            <>\n               {\" \"}\n               <ProfileImage alt={user.image_name} src={user.image_url} />{\" \"}\n            </>\n         )}\n         <br />\n\n         {toggleEdit ? (\n            <Dialog open={toggleEdit}>\n               <div align=\"center\">\n                  <DialogTitle>Edit Details</DialogTitle>\n                  <PaddedDialogContent>\n                     <form onSubmit={handleSubmit}>\n                        {user.name !== \"guest\" ? (\n                           <>\n                              <StyledTextField\n                                 fullWidth\n                                 onChange={handleProfileChange}\n                                 type=\"text\"\n                                 label=\"Name\"\n                                 value={profileEdit.name}\n                                 name=\"name\"\n                              />{\" \"}\n                              <br />\n                              <StyledTextField\n                                 fullWidth\n                                 onChange={handleProfileChange}\n                                 type=\"text\"\n                                 label=\"Email\"\n                                 value={profileEdit.email}\n                                 name=\"email\"\n                              />\n                           </>\n                        ) : (\n                           <p>*Name and email cannot be edited as a guest* </p>\n                        )}\n                        {user.type === \"teacher\" && (\n                           <>\n                              <StyledTextField\n                                 fullWidth\n                                 onChange={handleProfileChange}\n                                 type=\"text\"\n                                 label=\"Image Url\"\n                                 value={profileEdit.image_url}\n                                 name=\"image_url\"\n                              />\n                              <br />\n                              <StyledTextField\n                                 fullWidth\n                                 margin=\"normal\"\n                                 multiline\n                                 label=\"Background\"\n                                 onChange={handleProfileChange}\n                                 type=\"textarea\"\n                                 value={profileEdit.background}\n                                 name=\"background\"\n                              />\n                              <br />\n                              <StyledTextField\n                                 multiline\n                                 fullWidth\n                                 margin=\"normal\"\n                                 label=\"Follow Message\"\n                                 onChange={handleProfileChange}\n                                 type=\"textarea\"\n                                 value={profileEdit.follow_message}\n                                 name=\"follow_message\"\n                              />\n                           </>\n                        )}\n                     </form>\n                  </PaddedDialogContent>\n                  <DialogActions>\n                     {makeIconBtn(StyledSave, handleSubmit)}\n                     {makeIconBtn(StyledCancel, () => setToggleEdit(!toggleEdit))}\n                  </DialogActions>\n               </div>\n            </Dialog>\n         ) : (\n            <TightCard>\n               <CardHeader title=\"Profile\" />\n               <CardContent>\n                  {makeIconBtn(PermIdentityIcon, null)}\n                  {user.name} {makeIconBtn(MailOutlineIcon, null)}\n                  {user.email}\n                  {user.type === \"teacher\" && (\n                     <Paper>\n                        <p>Public Bio: {user.background} </p>\n                        <p>Follow Message: {user.follow_message}</p>\n                        <label htmlFor=\"optStatus\"> Question Status: </label>\n                        <FormControlLabel\n                           control={\n                              <StyledSwitch\n                                 color=\"primary\"\n                                 name=\"optStatus\"\n                                 checked={user.opt_in}\n                                 onChange={handleOptStatus}\n                              />\n                           }\n                           label={user.opt_in ? \"Open\" : \"Closed\"}\n                        />\n                        <br />\n                     </Paper>\n                  )}\n               </CardContent>\n               <TightButton onClick={() => setToggleEdit(!toggleEdit)}>Edit Info</TightButton>\n            </TightCard>\n         )}\n         <br />\n         {user.type === \"teacher\" ? <TeacherProfile /> : <StudentProfile />}\n      </div>\n   )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { IconButton, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\"\nimport { makeIconBtn } from \"../functions\"\nimport { primaryColor, StyledArrow } from \"./styles\"\nimport PauseIcon from \"@material-ui/icons/Pause\"\nimport RecordVoiceOverIcon from \"@material-ui/icons/RecordVoiceOver\"\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\"\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\"\nimport RedoIcon from \"@material-ui/icons/Redo\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst StyledPause = styled(PauseIcon)({\n   color: `${primaryColor}`,\n})\n\nconst StyledRecordingIcon = styled(FiberManualRecordIcon)({\n   color: `#BA1B1D`,\n})\n\nexport default function RecordingDialog({\n   setErrors,\n   setPrepRecord,\n   prepRecord,\n   setNewMed,\n   newMed,\n   setAttachedCustom,\n}) {\n   const [recordingState, setRecordingState] = useState(false)\n   const [mediaRecorder, setMediaRecorder] = useState(false)\n   const [mediaChunks, setMediaChunks] = useState([])\n   const [minutes, setMinutes] = useState(0)\n   const [seconds, setSeconds] = useState(0)\n   const [previewUrl, setPreviewUrl] = useState(\"\")\n\n   async function prepForRecording() {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true })\n      setMediaRecorder(new MediaRecorder(stream, { mimeType: \"audio/webm\" }))\n      setRecordingState(true)\n   }\n\n   const startRecording = () => {\n      mediaRecorder.start()\n      setRecordingState(\"Recording\")\n      setTimeout(() => setSeconds(1), 1000)\n   }\n\n   const stopAndCreateRecording = () => {\n      mediaRecorder.stop()\n      mediaRecorder.ondataavailable = e => setMediaChunks(e.data)\n      setRecordingState(\"Recorded\")\n   }\n\n   const attachRecordingAndPreview = () => {\n      setNewMed({ ...newMed, audio_file: mediaChunks })\n      const objectURL = URL.createObjectURL(mediaChunks)\n      setPreviewUrl(objectURL)\n      setRecordingState(\"Uploaded\")\n      setAttachedCustom(true)\n   }\n\n   const redoRecording = () => {\n      setPrepRecord(true)\n      setRecordingState(false)\n      setSeconds(0)\n      setMinutes(0)\n      setMediaChunks([])\n      prepForRecording()\n      setAttachedCustom(false)\n   }\n\n   const handleCancelRecording = () => {\n      setPrepRecord(false)\n      setMediaChunks([])\n      setAttachedCustom(false)\n   }\n\n   async function handleRecording() {\n      switch (recordingState) {\n         case false:\n            prepForRecording()\n            break\n         case true:\n            startRecording()\n            break\n         case \"Recording\":\n            stopAndCreateRecording()\n            break\n         case \"Recorded\":\n            attachRecordingAndPreview()\n            break\n         case \"Uploaded\":\n            redoRecording()\n            break\n      }\n   }\n\n   const handlePauseResume = () => {\n      if (mediaRecorder.state === \"paused\") {\n         mediaRecorder.resume()\n         if (mediaRecorder.state === \"inactive\") {\n            setErrors(\"Recorder is inactive\")\n         }\n      } else {\n         mediaRecorder.pause()\n      }\n   }\n\n   useEffect(() => {\n      let interval = setInterval(() => {\n         if (mediaRecorder.state === \"recording\") {\n            if (seconds >= 0) {\n               setSeconds(seconds + 1)\n            } else if (seconds === 59) {\n               setMinutes(minutes + 1)\n               setSeconds(0)\n            }\n         }\n         if (mediaRecorder.state === \"paused\" || mediaChunks.length > 0) {\n            setSeconds(seconds)\n            setMinutes(minutes)\n         }\n      }, 1000)\n      return () => clearInterval(interval)\n   }, [seconds])\n\n   return (\n      <Dialog open={prepRecord}>\n         <DialogTitle>Recording Interface</DialogTitle>\n         <DialogContent>\n            <div align=\"center\">\n               <p>\n                  {minutes} : {seconds >= 10 ? seconds : `0${seconds}`}{\" \"}\n                  {mediaRecorder.state === \"paused\" && \"Paused\"}\n               </p>\n            </div>\n            {recordingState === \"Uploaded\" && (\n               <>\n                  <br />\n                  <audio width=\"50%\" controls src={previewUrl} />\n                  <br />\n               </>\n            )}\n         </DialogContent>\n         <DialogActions>\n            <IconButton onClick={handleRecording}>\n               {recordingState === false ? (\n                  <RecordVoiceOverIcon />\n               ) : recordingState === true ? (\n                  <FiberManualRecordIcon />\n               ) : recordingState === \"Recording\" ? (\n                  <StyledRecordingIcon />\n               ) : recordingState === \"Recorded\" ? (\n                  <AttachFileIcon />\n               ) : (\n                  <RedoIcon />\n               )}\n            </IconButton>\n            {recordingState === \"Uploaded\" && makeIconBtn(CheckIcon, () => setPrepRecord(false))}\n            {mediaRecorder.state !== \"inactive\" && mediaRecorder.state !== undefined && (\n               <IconButton onClick={handlePauseResume}>\n                  <StyledArrow /> <StyledPause />\n               </IconButton>\n            )}\n            {makeIconBtn(CloseIcon, handleCancelRecording)}\n         </DialogActions>\n      </Dialog>\n   )\n}\n","import React, { useState } from \"react\"\nimport { handleChange } from \"../functions\"\nimport { addMed } from \"./store/teacherReducer\"\nimport { useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport {\n   LinearProgress,\n   DialogActions,\n   Dialog,\n   DialogTitle,\n   DialogContent,\n   DialogContentText,\n   MenuItem,\n   IconButton,\n   CardHeader,\n   InputLabel,\n} from \"@material-ui/core\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { TightButton, StyledSelect, StyledTextField, TightCard, ReverseTightButton } from \"./styles\"\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\"\nimport PageviewIcon from \"@material-ui/icons/Pageview\"\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport RecordingDialog from \"./RecordingDialog\"\nimport { makeIconBtn } from \"../functions\"\n\nconst StyledProg = styled(LinearProgress)({\n   width: \"50%\",\n   margin: \"0 auto\",\n})\n\nexport default function CreatePage() {\n   let user = useSelector(state => (state.student.name === \"\" ? state.teacher : state.student))\n   const initialState = {\n      title: \"\",\n      description: \"\",\n      med_type: \"Breath\",\n      est_length: \"\",\n      audio_file: \"\",\n      teacher_id: user.id,\n   }\n   const dispatch = useDispatch()\n   const history = useHistory()\n   const [prepRecord, setPrepRecord] = useState(false)\n   const [newMed, setNewMed] = useState(initialState)\n   const [success, setSuccess] = useState(false)\n   const [errors, setErrors] = useState(false)\n   const [loading, setLoading] = useState(false)\n   const [attachedCustom, setAttachedCustom] = useState(false)\n\n   const handleNewMed = e => handleChange(e, setNewMed, newMed)\n   const handleFile = e => setNewMed({ ...newMed, audio_file: e.target.files[0] })\n\n   async function handleSubmit(e) {\n      e.preventDefault()\n      setLoading(true)\n      setErrors(false)\n\n      const formData = new FormData()\n      for (let key in newMed) {\n         formData.append(key, newMed[key])\n      }\n\n      axios\n         .post(\"http://localhost:3000/meditations\", formData)\n         .then(res => {\n            if (res.data.id) {\n               dispatch(addMed(res.data))\n               setSuccess(true)\n               setNewMed(initialState)\n            }\n            if (res.data.error) {\n               setErrors(`Something went wrong, ${res.data.error}`)\n            }\n         })\n         .then(() => {\n            setLoading(false)\n         })\n   }\n\n   const handleStayOnPage = () => {\n      setSuccess(false)\n      setPrepRecord(false)\n   }\n\n   return (\n      <TightCard>\n         <CardHeader title=\"Create and Upload\" />\n         {loading && (\n            <p>\n               <StyledProg />{\" \"}\n            </p>\n         )}\n         {success && (\n            <Dialog open={success}>\n               {\" \"}\n               <DialogTitle id=\"dialog-title\">{\"Sucess!\"}</DialogTitle>\n               <DialogContent>\n                  <DialogContentText id=\"dialog-description\">\n                     Your file has been uploaded! Would you like to create more or view your new\n                     content on your profile page?\n                  </DialogContentText>\n               </DialogContent>\n               <DialogActions>\n                  {makeIconBtn(PageviewIcon, () => history.push(\"/profile\"))}\n                  {makeIconBtn(AddCircleIcon, handleStayOnPage)}\n               </DialogActions>\n            </Dialog>\n         )}\n         {errors && <p>{errors}</p>}\n         <form onSubmit={handleSubmit}>\n            <StyledTextField\n               value={newMed.title}\n               onChange={handleNewMed}\n               label=\"Title\"\n               type=\"text\"\n               name=\"title\"\n            />\n\n            <br />\n\n            <StyledTextField\n               onChange={handleNewMed}\n               value={newMed.description}\n               fullWidth\n               multiline\n               label=\"Description\"\n               type=\"text\"\n               name=\"description\"\n            />\n\n            <StyledTextField\n               margin=\"normal\"\n               label=\"Length in Minutes\"\n               value={newMed.est_length}\n               onChange={handleNewMed}\n               type=\"number\"\n               name=\"est_length\"\n            />\n            <InputLabel id=\"type-label\" htmlFor=\"med_type\">\n               Type\n            </InputLabel>\n            <StyledSelect\n               idLabel=\"type-label\"\n               id=\"med_type\"\n               name=\"med_type\"\n               label=\"Type\"\n               onChange={handleNewMed}>\n               <MenuItem value=\"--select-one--\"> --select-one--</MenuItem>\n               <MenuItem value=\"Breath\">Breath</MenuItem>\n               <MenuItem value=\"Awareness\">Awareness</MenuItem>\n               <MenuItem value=\"Emotions\">Emotions</MenuItem>\n               <MenuItem value=\"Metta\">Metta</MenuItem>\n               <MenuItem value=\"Insight\">Insight</MenuItem>\n               <MenuItem value=\"Bodyscan\">Body Scan</MenuItem>\n               <MenuItem value=\"Listening\">Listening</MenuItem>\n               <MenuItem value=\"Seeing\">Seeing</MenuItem>\n               <MenuItem value=\"Walking\">Walking</MenuItem>\n               <MenuItem value=\"Concentration\">Concentration</MenuItem>\n               <MenuItem value=\"Nondual\">Non-Dual</MenuItem>\n               <MenuItem value=\"Sleep\">Sleep</MenuItem>\n            </StyledSelect>\n            <br />\n            {!attachedCustom ? (\n               <>\n                  <input\n                     accept=\"audio/*\"\n                     style={{ display: \"none\" }}\n                     onChange={handleFile}\n                     type=\"file\"\n                     name=\"audio_file\"\n                     id=\"audio_file\"\n                  />\n                  <span>{newMed.audio_file.name}</span>\n                  <label htmlFor=\"audio_file\">\n                     {\" \"}\n                     <IconButton component=\"span\">\n                        {\" \"}\n                        <CloudUploadIcon />\n                     </IconButton>\n                  </label>\n               </>\n            ) : (\n               <p> Recorded File Attached </p>\n            )}\n            <br />\n            <ReverseTightButton onClick={handleSubmit}>Submit</ReverseTightButton>\n         </form>\n         <br />\n         <TightButton onClick={() => setPrepRecord(true)}>Record File</TightButton>\n         <br />\n         {prepRecord && (\n            <RecordingDialog\n               setErrors={setErrors}\n               setPrepRecord={setPrepRecord}\n               prepRecord={prepRecord}\n               setNewMed={setNewMed}\n               newMed={newMed}\n               setAttachedCustom={setAttachedCustom}\n            />\n         )}\n      </TightCard>\n   )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport { CardHeader, CardMedia, ButtonGroup, CardContent, Grid } from \"@material-ui/core\"\nimport { TightButton, ReverseTightButton, TightCard } from \"./styles\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst TeacherPictureSmall = styled(CardMedia)({\n   height: \"200px\",\n})\n\nexport default function SearchTeacher({ meditations }) {\n   const teachers = meditations\n      .map(m => m.teacher)\n      .reduce((acc, t) => acc.concat(acc.find(i => i.id === t.id) ? [] : [t]), [])\n   const [sortedTeachers, setSortedTeachers] = useState([])\n   const history = useHistory()\n\n   useEffect(() => {\n      setSortedTeachers(teachers)\n   }, [])\n\n   const handleAlphSort = () =>\n      setSortedTeachers(teachers.sort((a, b) => a.name.localeCompare(b.name)))\n\n   const handleListenSort = () =>\n      setSortedTeachers(teachers.sort((a, b) => b.total_listens - a.total_listens))\n\n   const teachersDisplay = sortedTeachers.map(t => (\n      <TightCard onClick={() => history.push(`/teachers/${t.id}`)} key={t.id}>\n         <CardHeader title={t.name} />\n         <TeacherPictureSmall alt={t.name} image={t.image_url} />\n         <CardContent>\n            Listens: {t.total_listens} <br /> Meditations: {t.med_number}\n         </CardContent>\n      </TightCard>\n   ))\n\n   return (\n      <div>\n         <h2>Discover New Teachers</h2>\n         <p>\n            <ButtonGroup>\n               <TightButton onClick={handleAlphSort}>By Name</TightButton>{\" \"}\n               <ReverseTightButton onClick={handleListenSort}>By Popularity</ReverseTightButton>\n            </ButtonGroup>\n         </p>\n         <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\n            {teachersDisplay}\n         </Grid>\n      </div>\n   )\n}\n","import React, { useState } from \"react\"\nimport MedLineItem from \"./MedLineItem\"\nimport { useHistory } from \"react-router-dom\"\nimport { TightButton, StyledDropDown } from \"./styles\"\nimport { InputLabel, MenuItem, Grid, FormControl } from \"@material-ui/core\"\n\nexport default function SearchLengthType({ meditations }) {\n   const [toggleOpen, setToggleOpen] = useState(false)\n   const [time, setTime] = useState(0)\n   const [type, setType] = useState(\"--select-one--\")\n   const [filter, setFiltered] = useState(meditations)\n   const history = useHistory()\n\n   const handleSelection = id => history.push(`/playingnow/${id}`)\n\n   const handleTypeFilter = e => {\n      setType(e.target.value)\n   }\n\n   const handleLengthFilter = e => {\n      setTime(e.target.value)\n   }\n\n   const filteredType = type => {\n      if (type === \"--select-one--\") {\n         return meditations\n      } else {\n         return meditations.filter(m => m.med_type === type)\n      }\n   }\n   const filteredLength = (array, time) => {\n      if (+time === 0) {\n         return array\n      }\n      if (time < 30) {\n         return array.filter(m => m.est_length <= time && m.est_length >= time - 4)\n      }\n      if (time === 30) {\n         return array.filter(m => m.est_length <= time && m.est_length >= time - 9)\n      } else {\n         return array.filter(m => m.est_length <= time && m.est_length >= time - 14)\n      }\n   }\n\n   const handleFilter = (time, type) => {\n      const filtered = filteredLength(filteredType(type), time).map(m => (\n         <MedLineItem clickHandler={handleSelection} key={m.id} m={m} />\n      ))\n      setFiltered(filtered)\n      setToggleOpen(true)\n   }\n\n   return (\n      <div>\n         <FormControl>\n            <InputLabel id=\"length\">Length </InputLabel>\n            <StyledDropDown labelId=\"length\" onChange={handleLengthFilter}>\n               <MenuItem value={0}>--select-one--</MenuItem>\n               <MenuItem value={5}>5 Minutes</MenuItem>\n               <MenuItem value={10}>10 Minutes</MenuItem>\n               <MenuItem value={15}>15 Minutes</MenuItem>\n               <MenuItem value={20}>20 Minutes</MenuItem>\n               <MenuItem value={30}>30 Minutes</MenuItem>\n               <MenuItem value={45}>45 Minutes</MenuItem>\n               <MenuItem value={60}>60 Minutes</MenuItem>\n            </StyledDropDown>\n         </FormControl>{\" \"}\n         {\"\"}\n         <FormControl>\n            <InputLabel labelId=\"type\">Type</InputLabel>\n            <StyledDropDown id=\"type\" onChange={handleTypeFilter}>\n               <MenuItem value=\"--select-one--\"> --select-one--</MenuItem>\n               <MenuItem value=\"Breath\">Breath</MenuItem>\n               <MenuItem value=\"Awareness\">Awareness</MenuItem>\n               <MenuItem value=\"Emotions\">Emotions</MenuItem>\n               <MenuItem value=\"Metta\">Metta</MenuItem>\n               <MenuItem value=\"Insight\">Insight</MenuItem>\n               <MenuItem value=\"Bodyscan\">Body Scan</MenuItem>\n               <MenuItem value=\"Listening\">Listening</MenuItem>\n               <MenuItem value=\"Seeing\">Seeing</MenuItem>\n               <MenuItem value=\"Walking\">Walking</MenuItem>\n               <MenuItem value=\"Concentration\">Concentration</MenuItem>\n               <MenuItem value=\"Nondual\">Non-Dual</MenuItem>\n               <MenuItem value=\"Sleep\">Sleep</MenuItem>\n            </StyledDropDown>\n         </FormControl>\n         <br />\n         <br />\n         <TightButton onClick={() => handleFilter(time, type)}> Search!</TightButton>\n         <br />\n         <br />\n         <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            {toggleOpen && filter}\n         </Grid>\n      </div>\n   )\n}\n","import React, { useEffect, useState } from \"react\"\nimport SearchTeacher from \"./SearchTeacher\"\nimport SearchLengthType from \"./SearchLengthType\"\nimport { ButtonGroup } from \"@material-ui/core\"\nimport { TightButton, ReverseTightButton } from \"./styles\"\n\nexport default function SearchMeditations() {\n   const [displayTeacher, setDisplayTeacher] = useState(false)\n   const [errors, setErrors] = useState(false)\n   const [displayLength, setDisplayLength] = useState(false)\n   const [meditations, setMeditations] = useState([])\n\n   useEffect(() => {\n      async function getData() {\n         const res = await fetch(\"/meditations\")\n         const data = await res.json()\n\n         if (data[0].id) {\n            setMeditations(data)\n         } else {\n            setErrors(`Something went wrong : ${data.error}. Please try again`)\n         }\n      }\n      getData()\n   }, [])\n\n   return (\n      <div>\n         <h2>Search Meditations</h2>\n         {errors && <p>{errors}</p>}\n         <ButtonGroup>\n            <TightButton onClick={() => setDisplayTeacher(!displayTeacher)}>By Teacher</TightButton>{\" \"}\n            <ReverseTightButton onClick={() => setDisplayLength(!displayLength)}>\n               By Length or Type\n            </ReverseTightButton>\n         </ButtonGroup>\n         {displayTeacher && <SearchTeacher meditations={meditations} />}\n         {displayLength && <SearchLengthType meditations={meditations} />}\n      </div>\n   )\n}\n","export const teacherGuest = {\n   email: \"guest\",\n   password: \"guest\",\n   type: \"teacher\",\n}\nexport const studentGuest = {\n   email: \"guestS\",\n   password: \"guest\",\n   type: \"student\",\n}\n","import React, { useState } from \"react\"\nimport { useHistory, Link } from \"react-router-dom\"\nimport { handleChange, createConfig } from \"../functions\"\nimport { loginT } from \"./store/teacherReducer\"\nimport { loginS } from \"./store/studentReducer\"\nimport { Container, Card, RadioGroup, FormLabel, FormControlLabel } from \"@material-ui/core\"\nimport { useDispatch } from \"react-redux\"\nimport {\n   StyledButton,\n   StyledTextField,\n   StyledRad,\n   CenterCon,\n   StyledOutlineBtn,\n   StyledLogo,\n   CenterLogo,\n} from \"./styles\"\nimport { teacherGuest, studentGuest } from \"./store/guestUsers\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst CenteringHeaderDiv = styled(\"div\")({\n   marginLeft: \"3%\",\n})\n\nconst CenteringGuestDiv = styled(\"div\")({\n   marginLeft: \"-4.5%\",\n})\n\nexport default function LogInPage() {\n   const initialState = {\n      email: \"\",\n      password: \"\",\n      type: \"student\",\n   }\n\n   const dispatch = useDispatch()\n\n   const [errors, setErrors] = useState(false)\n   const [logIn, setLogIn] = useState(initialState)\n   const handleLogInChange = e => handleChange(e, setLogIn, logIn)\n   const history = useHistory()\n\n   async function handleLogIn(e, guest = null) {\n      e.preventDefault()\n      setErrors(false)\n\n      const configObj = createConfig(\"POST\", logIn)\n\n      const res = await fetch(\"/log_in\", configObj)\n      const data = await res.json()\n      if (data.id) {\n         logIn.type === \"teacher\" ? dispatch(loginT(data)) : dispatch(loginS(data))\n         history.push(\"/landing\")\n      } else {\n         setErrors(\"Password and/or email do not match\")\n      }\n   }\n\n   async function handleGuest(guest) {\n      setErrors(false)\n      const configObj = createConfig(\"POST\", guest === \"teacher\" ? teacherGuest : studentGuest)\n      const res = await fetch(\"/log_in\", configObj)\n      const data = await res.json()\n      if (data.id) {\n         guest === \"teacher\" ? dispatch(loginT(data)) : dispatch(loginS(data))\n         history.push(\"/landing\")\n      } else {\n         setErrors(\"Something went wrong\")\n      }\n   }\n\n   return (\n      <Card>\n         <CenterCon>\n            <CenterLogo>\n               {\" \"}\n               <StyledLogo src=\"https://i.imgur.com/OS0kSRb.png?1\" />\n            </CenterLogo>\n            <CenteringHeaderDiv>\n               <h2>Log-In Here!</h2>\n            </CenteringHeaderDiv>\n            {errors && <p>{errors}</p>}\n            <form onSubmit={handleLogIn}>\n               <StyledTextField\n                  onChange={handleLogInChange}\n                  value={logIn.email}\n                  label=\"Email Address\"\n                  name=\"email\"\n                  placeholder=\"Enter your email\"\n               />\n               <br />\n\n               <StyledTextField\n                  onChange={handleLogInChange}\n                  value={logIn.password}\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                  name=\"password\"\n                  placeholder=\"Enter your password\"\n               />\n               <br />\n               <br />\n               <Container size=\"med\">\n                  <FormLabel component=\"legend\">User Type</FormLabel>\n\n                  <RadioGroup name=\"type\" value={logIn.type}>\n                     <FormControlLabel\n                        onChange={handleLogInChange}\n                        control={<StyledRad color=\"default\" />}\n                        value=\"teacher\"\n                        label=\"Teacher\"\n                     />\n                     <FormControlLabel\n                        onChange={handleLogInChange}\n                        control={<StyledRad color=\"default\" />}\n                        label=\"Student\"\n                        value=\"student\"\n                     />\n                  </RadioGroup>\n               </Container>\n               <CenteringGuestDiv>\n                  <StyledButton type=\"submit\">Submit</StyledButton>\n               </CenteringGuestDiv>\n            </form>{\" \"}\n            <CenteringGuestDiv>\n               <p>\n                  Don't have a login? <Link to=\"/signup\">Sign up here! </Link>{\" \"}\n               </p>\n               <StyledOutlineBtn\n                  onClick={() => {\n                     handleGuest(\"teacher\")\n                  }}>\n                  Continue as Guest Teacher\n               </StyledOutlineBtn>\n               <br />\n               <StyledOutlineBtn onClick={() => handleGuest(\"student\")}>\n                  Continue as Guest Student\n               </StyledOutlineBtn>\n            </CenteringGuestDiv>\n         </CenterCon>\n      </Card>\n   )\n}\n","import React, { useState } from \"react\"\nimport { createConfig } from \"../functions\"\nimport { handleChange } from \"../functions\"\nimport { useHistory } from \"react-router-dom\"\nimport { Container, Card, RadioGroup, FormLabel, FormControlLabel } from \"@material-ui/core\"\nimport {\n   StyledButton,\n   StyledTextField,\n   StyledRad,\n   StyledLogo,\n   CenterLogo,\n   CenterCon,\n} from \"./styles\"\n\nexport default function SignUpPage() {\n   const initialState = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      type: \"student\",\n   }\n   const [errors, setErrors] = useState(false)\n   const [signUp, setSignUp] = useState(initialState)\n   const history = useHistory()\n   const handleSignUpChange = e => handleChange(e, setSignUp, signUp)\n\n   async function handleSignUp(e) {\n      e.preventDefault()\n      if (signUp.password === signUp.confirmPassword) {\n         setErrors(false)\n         const configObj = createConfig(\"POST\", signUp)\n\n         const res = await fetch(\"/users\", configObj)\n         const data = await res.json()\n         if (res.ok) {\n            history.push(\"/\")\n         } else {\n            setErrors(data.error)\n         }\n      } else {\n         setErrors(\"make sure passwords match\")\n      }\n   }\n\n   return (\n      <Card>\n         <CenterCon>\n            <p>\n               <CenterLogo>\n                  {\" \"}\n                  <StyledLogo src=\"https://i.imgur.com/OS0kSRb.png?1\" />\n               </CenterLogo>\n            </p>\n            <h2>Sign Up Here!</h2>\n            {errors && <p>{errors}</p>}\n            <form onSubmit={handleSignUp}>\n               <StyledTextField\n                  onChange={handleSignUpChange}\n                  value={signUp.name}\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter your name\"\n               />\n               <br />\n               <StyledTextField\n                  onChange={handleSignUpChange}\n                  value={signUp.email}\n                  label=\"Email\"\n                  name=\"email\"\n                  placeholder=\"Enter your email\"\n               />\n               <br />\n\n               <StyledTextField\n                  onChange={handleSignUpChange}\n                  value={signUp.password}\n                  label=\"Password\"\n                  type=\"password\"\n                  autoComplete=\"new-password\"\n                  name=\"password\"\n                  placeholder=\"Enter your password\"\n               />\n               <br />\n               <StyledTextField\n                  onChange={handleSignUpChange}\n                  value={signUp.confirmPassword}\n                  type=\"password\"\n                  label=\"Confirm Password\"\n                  autoComplete=\"new-password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm your password\"\n               />\n               <br />\n               <br></br>\n               <Container size=\"med\">\n                  <FormLabel component=\"legend\">User Type</FormLabel>\n                  <RadioGroup>\n                     <FormControlLabel\n                        onChange={handleSignUpChange}\n                        control={<StyledRad color=\"default\" />}\n                        label=\"Teacher\"\n                        id=\"teacher\"\n                        value=\"teacher\"\n                        name=\"type\"\n                     />\n\n                     <FormControlLabel\n                        onChange={handleSignUpChange}\n                        control={<StyledRad color=\"default\" />}\n                        label=\"Student\"\n                        value=\"student\"\n                        name=\"type\"\n                     />\n                  </RadioGroup>\n               </Container>\n               <StyledButton type=\"submit\">Submit</StyledButton>\n            </form>\n         </CenterCon>\n      </Card>\n   )\n}\n","import React, { useState } from \"react\"\nimport { handleChange, createConfig, makeIconBtn } from \"../functions\"\nimport { Avatar } from \"@material-ui/core\"\nimport {\n   StyledSend,\n   StyledCancel,\n   TightCard,\n   TightPaper,\n   StyledTextField,\n   StyledHelp,\n} from \"./styles\"\n\nexport default function ChatContainer({ handleDelete, handleAdd, userType, userName, c }) {\n   const initialMessage = {\n      content: \"\",\n      teacher_id: c.teacher_id,\n      student_id: c.student_id,\n      chat_id: c.id,\n      username: userName,\n   }\n   const [message, setMessage] = useState(initialMessage)\n   const [errors, setErrors] = useState(false)\n\n   const handleContent = e => handleChange(e, setMessage, message)\n   async function handleMessageSubmit(e) {\n      e.preventDefault()\n\n      const res = await fetch(`/messages`, createConfig(\"POST\", message))\n      const data = await res.json()\n      setMessage(initialMessage)\n      if (data.id) {\n         handleAdd()\n      } else {\n         setErrors(`Something went wrong: ${data.error}`)\n      }\n   }\n\n   async function handleCloseChat(id) {\n      const res = await fetch(`/chats/${id}`, createConfig(\"DELETE\"))\n      const data = await res.json()\n      data.id ? handleDelete() : setErrors(`Something went wrong: ${data.error}`)\n   }\n\n   return (\n      <>\n         {\" \"}\n         <TightPaper key={c.id}>\n            {\" \"}\n            {makeIconBtn(StyledHelp, null)}\n            {c.messages[0].username} asked: \" {c.title} \"\n         </TightPaper>\n         <ul>\n            {\" \"}\n            {c.messages.map(m => (\n               <>\n                  <li key={m.id}>\n                     <TightCard>\n                        <Avatar variant=\"square\">{m.username.slice(0, 1)}</Avatar>\n                        {m.username === userName ? \"You wrote:\" : `From: ${m.username}`} <br />{\" \"}\n                        <br />\n                        {m.username === userName ? m.content : `Message: ${m.content}`}\n                        <p />\n                     </TightCard>\n                  </li>\n                  <br />\n               </>\n            ))}{\" \"}\n         </ul>\n         {errors && <p>{errors}</p>}\n         <form onSubmit={handleMessageSubmit}>\n            <StyledTextField\n               onChange={handleContent}\n               multiline\n               margin=\"normal\"\n               label=\"Reply\"\n               value={c.content}\n               name=\"content\"\n               type=\"textarea\"\n               placeholder=\"Respond\"\n            />\n            {makeIconBtn(StyledSend, null, true)}\n         </form>\n         <br />\n         {makeIconBtn(StyledCancel, () => handleCloseChat(c.id))}\n      </>\n   )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { setChatsS } from \"./store/studentReducer\"\nimport { setChatsT, hideDonation } from \"./store/teacherReducer\"\nimport ChatContainer from \"./ChatContainer\"\nimport { TightPaper } from \"./styles\"\nimport { makeIconBtn } from \"../functions\"\nimport CheckIcon from \"@material-ui/icons/Check\"\n\nexport default function InteractPage() {\n   let user = useSelector(state => (state.student.name === \"\" ? state.teacher : state.student))\n\n   const dispatch = useDispatch()\n   const [fetchChats, setFetchChats] = useState([])\n   const [addMessage, setAddMessage] = useState(false)\n   const [deleteMessage, setDeleteMessage] = useState(false)\n\n   const handleAdd = () => setAddMessage(!addMessage)\n   const handleDelete = () => setDeleteMessage(!deleteMessage)\n\n   useEffect(() => {\n      async function getData() {\n         const res = await fetch(`/chats/${user.type}s/${user.id}`)\n         const data = await res.json()\n         user.type === \"teacher\" ? dispatch(setChatsT(data)) : dispatch(setChatsS(data))\n         setFetchChats(data)\n      }\n\n      getData()\n   }, [addMessage, deleteMessage])\n\n   const handleHideDonation = id => dispatch(hideDonation(id))\n\n   const donationsDisplay = user.donations.map(d => (\n      <div key={d.id}>\n         <TightPaper elevation={3}>\n            <p>\n               From : {d.username} (${Number(d.amount).toFixed(2)})\n            </p>\n            <p>Message: {d.message}</p>\n            {makeIconBtn(CheckIcon, () => handleHideDonation(d.id))}\n         </TightPaper>\n      </div>\n   ))\n\n   const chatDisplay = fetchChats.map(c => (\n      <ChatContainer\n         handleAdd={handleAdd}\n         handleDelete={handleDelete}\n         userType={user.type}\n         userName={user.name}\n         key={c.id}\n         c={c}\n      />\n   ))\n\n   return (\n      <>\n         <h2>Message{user.type === \"teacher\" && \" & Donations\"} Page</h2>\n         {user.opt_in === false ? (\n            <p>\n               You are not signed up to receive messages. Please opt-in on your profile page to do\n               so.\n            </p>\n         ) : (\n            <h3>Messages</h3>\n         )}\n         {chatDisplay}\n         {chatDisplay.length === 0 && <p>You have no messages!</p>}\n         {user.type === \"teacher\" && <h3>Donations</h3>}\n         {user.type !== \"student\" ? (\n            user.donations.length > 0 ? (\n               <>{donationsDisplay}</>\n            ) : (\n               <p>No donations yet</p>\n            )\n         ) : null}\n      </>\n   )\n}\n","import React, { useState } from \"react\"\nimport { useHistory, NavLink } from \"react-router-dom\"\nimport { createConfig } from \"../functions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { logoutT } from \"./store/teacherReducer\"\nimport { logoutS } from \"./store/studentReducer\"\nimport { Toolbar, IconButton, Menu, MenuItem } from \"@material-ui/core\"\nimport HomeIcon from \"@material-ui/icons/Home\"\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\"\nimport { styled } from \"@material-ui/core/styles\"\nimport AccountCircle from \"@material-ui/icons/AccountCircle\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\"\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\"\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport { StyledAppBar, SmallLogo } from \"./styles\"\nimport { makeIconBtn } from \"../functions\"\n\nconst StyledMenuBtn = styled(IconButton)({\n   marginRight: \"38%\",\n})\n\nconst StyledExit = styled(ExitToAppIcon)({\n   color: \"white\",\n})\n\nconst ExitLink = styled(NavLink)({\n   marginLeft: \"35%\",\n})\n\nexport default function Navbar() {\n   let user = useSelector(state => (state.student.name === \"\" ? state.teacher : state.student))\n   const dispatch = useDispatch()\n   const history = useHistory()\n   const [anchorEl, setAnchorEl] = useState(null)\n\n   async function handleLogOut() {\n      const res = await fetch(\"/log_in\", createConfig(\"DELETE\"))\n      if (res.ok) {\n         dispatch(logoutT())\n         dispatch(logoutS())\n         history.push(\"/\")\n      }\n   }\n\n   const handleClick = event => {\n      setAnchorEl(event.currentTarget)\n   }\n\n   const handleClose = () => {\n      setAnchorEl(null)\n   }\n\n   return (\n      <StyledAppBar position=\"static\">\n         <Toolbar>\n            <StyledMenuBtn edge=\"start\" onClick={handleClick} color=\"inherit\">\n               <MenuIcon />\n            </StyledMenuBtn>\n\n            <SmallLogo src=\"https://i.imgur.com/OS0kSRb.png?1\" />\n            <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n               <NavLink to=\"/landing\">\n                  <MenuItem onClick={handleClose}> Home {makeIconBtn(HomeIcon, null)}</MenuItem>\n               </NavLink>\n               <NavLink to=\"/profile\">\n                  <MenuItem onClick={handleClose}>\n                     {\" \"}\n                     Profile {makeIconBtn(AccountCircle, null)}\n                  </MenuItem>\n               </NavLink>\n               {user.type === \"teacher\" ? (\n                  <NavLink to=\"/create\">\n                     <MenuItem onClick={handleClose}>\n                        Create {makeIconBtn(AddCircleIcon, null)}\n                     </MenuItem>\n                  </NavLink>\n               ) : (\n                  <NavLink to=\"/search\">\n                     <MenuItem onClick={handleClose}>\n                        Search {makeIconBtn(FindInPageIcon, null)}\n                     </MenuItem>\n                  </NavLink>\n               )}\n               <NavLink to=\"/interact\">\n                  <MenuItem onClick={handleClose}>\n                     Interact\n                     {makeIconBtn(ContactMailIcon, null)}\n                  </MenuItem>\n               </NavLink>\n            </Menu>\n            <ExitLink to=\"/\"> {makeIconBtn(StyledExit, handleLogOut)}</ExitLink>\n         </Toolbar>\n      </StyledAppBar>\n   )\n}\n","import React, { useState } from \"react\"\nimport { handleChange, createConfig } from \"../functions\"\nimport { addChat, addDonation } from \"./store/studentReducer\"\nimport { useDispatch } from \"react-redux\"\nimport {\n   TightButton,\n   StyledCancel,\n   StyledTextField,\n   StyledSend,\n   ReverseTightButton,\n} from \"./styles\"\nimport {\n   ButtonGroup,\n   Dialog,\n   DialogActions,\n   DialogTitle,\n   DialogContent,\n   Snackbar,\n} from \"@material-ui/core\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport { makeIconBtn } from \"../functions\"\n\nexport default function FollowInfo({\n   followMessage,\n   optStatus,\n   teacherName,\n   teacherId,\n   userId,\n   userName,\n}) {\n   const initialDonation = {\n      amount: 0,\n      message: \"\",\n      teacher_id: teacherId,\n      student_id: userId,\n      username: userName,\n   }\n   const initialQuestion = {\n      teacher_id: teacherId,\n      student_id: userId,\n      content: \"\",\n      title: \"\",\n      username: userName,\n   }\n\n   const [toggleDonate, setToggleDonate] = useState(false)\n   const [toggleQuestion, setToggleQuestion] = useState(false)\n   const [donation, setDonation] = useState(initialDonation)\n   const [question, setQuestion] = useState(initialQuestion)\n   const [response, setResponse] = useState(false)\n   const dispatch = useDispatch()\n\n   const handleQuestion = e => handleChange(e, setQuestion, question)\n   const handleDonation = e => handleChange(e, setDonation, donation)\n\n   async function handleSubmitQuestion(e) {\n      e.preventDefault()\n      const res = await fetch(\"/messages\", createConfig(\"POST\", question))\n      const data = await res.json()\n\n      if (data.message) {\n         dispatch(addChat({ ...data.chat, messages: [data.message] }))\n         setResponse(\"Question sent!\")\n         setQuestion(initialQuestion)\n         setTimeout(() => {\n            setResponse(false)\n            setToggleQuestion(false)\n         }, 2000)\n      } else {\n         setResponse(`Something went wrong, ${data.error}`)\n      }\n   }\n\n   async function createDonation(e) {\n      e.preventDefault()\n\n      const res = await fetch(`/donations`, createConfig(\"POST\", donation))\n      const data = await res.json()\n      if (data.id) {\n         dispatch(addDonation(data))\n         setResponse(\"Donation sent! Thank You! \")\n         setDonation(initialDonation)\n         setTimeout(() => {\n            setResponse(false)\n            setToggleDonate(false)\n         }, 2000)\n      } else {\n         setResponse(`Something went wrong, ${data.error}`)\n      }\n   }\n\n   return (\n      <div>\n         <hr />\n         {followMessage ? (\n            <p>\n               From {teacherName} : {followMessage}\n            </p>\n         ) : (\n            <p>Thanks for the follow! This teacher has not set up a personalized message yet.</p>\n         )}\n         {!optStatus && <p>This teacher is not taking questions at this time.</p>}\n         {response && (\n            <Snackbar anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} open={response}>\n               <Alert variant=\"filled\" severity=\"success\">\n                  {response}\n               </Alert>\n            </Snackbar>\n         )}\n         {toggleDonate && (\n            <Dialog open={toggleDonate}>\n               <DialogTitle id=\"dialog-donate\">Donation Form</DialogTitle>\n               <DialogContent>\n                  <p> One dollar minimum required per donation</p>\n                  <form onSubmit={createDonation}>\n                     <StyledTextField\n                        value={donation.amount}\n                        onChange={handleDonation}\n                        label=\"Amount\"\n                        type=\"number\"\n                        min={1}\n                        name=\"amount\"\n                     />\n                     <br />\n                     <StyledTextField\n                        value={donation.message}\n                        multiline\n                        onChange={handleDonation}\n                        fullWidth\n                        label=\"Message\"\n                        type=\"textarea\"\n                        name=\"message\"\n                        placeholder=\"Send a message ..\"\n                     />\n                     <p>from: {userName}</p>\n                  </form>\n               </DialogContent>\n               <DialogActions>\n                  {makeIconBtn(StyledSend, createDonation)}\n                  {makeIconBtn(StyledCancel, () => setToggleDonate(!toggleDonate))}\n               </DialogActions>\n            </Dialog>\n         )}\n         {toggleQuestion && (\n            <Dialog open={toggleQuestion}>\n               <DialogContent>\n                  <p>To: {teacherName}</p>\n                  <form onSubmit={handleSubmitQuestion}>\n                     <StyledTextField\n                        value={question.title}\n                        onChange={handleQuestion}\n                        multiline\n                        type=\"textarea\"\n                        name=\"title\"\n                        label=\"Title\"\n                        placeholder=\"Title ..\"\n                     />\n\n                     <StyledTextField\n                        value={question.content}\n                        label=\"Question\"\n                        fullWidth\n                        multiline\n                        onChange={handleQuestion}\n                        type=\"textarea\"\n                        name=\"content\"\n                        placeholder=\"Ask a question ..\"\n                     />\n                  </form>\n                  <p>from: {userName}</p>\n               </DialogContent>\n               <DialogActions>\n                  {makeIconBtn(StyledSend, handleSubmitQuestion)}\n                  {makeIconBtn(StyledCancel, () => setToggleQuestion(!toggleQuestion))}\n               </DialogActions>\n            </Dialog>\n         )}\n         <p>\n            {\" \"}\n            <>\n               <ButtonGroup>\n                  <TightButton onClick={() => setToggleDonate(!toggleDonate)}>\n                     {toggleDonate ? \"Close Donation\" : \"Donate\"}\n                  </TightButton>{\" \"}\n                  {optStatus && (\n                     <ReverseTightButton onClick={() => setToggleQuestion(!toggleQuestion)}>\n                        {\" \"}\n                        {toggleQuestion ? \"Cancel Question\" : \"Ask a Question\"}\n                     </ReverseTightButton>\n                  )}\n               </ButtonGroup>\n            </>\n         </p>\n         <hr />\n      </div>\n   )\n}\n","import React, { useState, useEffect } from \"react\"\nimport MedLineItem from \"./MedLineItem\"\nimport { createConfig } from \"../functions\"\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport { addFollow, removeFollow } from \"./store/studentReducer\"\nimport { useDispatch } from \"react-redux\"\nimport FollowInfo from \"./FollowInfo\"\nimport { FormControlLabel, Grid } from \"@material-ui/core\"\nimport { StyledSwitch, StyledPaper } from \"./styles\"\n\nexport default function ViewTeacher() {\n   const teacherId = useParams().id\n   const [teacher, setTeacher] = useState({\n      name: \"\",\n      meditations: [],\n   })\n   const [errors, setErrors] = useState(false)\n   const history = useHistory()\n   const user = useSelector(state => state.student)\n   const follow = user.follows.find(f => f.teacher_id === +teacherId)\n   const followsTecherId = useSelector(state => state.student.follows).map(f => f.teacher_id)\n   const followerStatus = followsTecherId.includes(+teacherId)\n   const dispatch = useDispatch()\n   const handleSelection = id => history.push(`/playingnow/${id}`)\n\n   useEffect(() => {\n      async function getTeacher() {\n         const res = await fetch(`/teachers/${teacherId}`)\n         const data = await res.json()\n\n         setTeacher(data)\n      }\n      getTeacher()\n   }, [teacherId])\n\n   async function handleFollow() {\n      const configObj = createConfig(\"POST\", {\n         student_id: user.id,\n         teacher_id: teacherId,\n      })\n\n      const res = await fetch(`/follows`, configObj)\n      const data = await res.json()\n\n      data.id ? dispatch(addFollow(data)) : setErrors(data.error)\n   }\n\n   async function handleUnfollow() {\n      const res = await fetch(`/follows/${follow.id}`, createConfig(\"DELETE\"))\n      const data = await res.json()\n\n      data.id ? dispatch(removeFollow(data.id)) : setErrors(data.error)\n   }\n\n   async function handleFollowOrUnfollow(e) {\n      setErrors(false)\n      e.target.checked ? handleFollow() : handleUnfollow()\n   }\n\n   const meditationsDisplay = teacher.meditations.map(m => (\n      <MedLineItem clickHandler={handleSelection} key={m.id} m={m} />\n   ))\n\n   return (\n      <div>\n         <div\n            className=\"teacherPhoto\"\n            style={{\n               backgroundColor: \"transparent\",\n            }}>\n            <h2>{teacher.name}</h2>\n            <img\n               src={teacher.image_url}\n               alt={teacher.name}\n               style={{ height: \"500px\", width: \"100%\", objectFit: \"cover\" }}\n            />\n            <StyledPaper>\n               <p>{teacher.background}</p>\n            </StyledPaper>\n            {errors && <p>{errors}</p>}\n\n            <FormControlLabel\n               control={\n                  <StyledSwitch\n                     name=\"followSwitch\"\n                     checked={followerStatus}\n                     onChange={handleFollowOrUnfollow}\n                  />\n               }\n               label={followerStatus ? \"Following\" : \"Not Following\"}\n            />\n            {followerStatus ? (\n               <FollowInfo\n                  teacherName={teacher.name}\n                  teacherId={teacherId}\n                  userId={user.id}\n                  userName={user.name}\n                  optStatus={teacher.opt_in}\n                  followMessage={teacher.follow_message}\n               />\n            ) : null}\n         </div>\n         <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n            {meditationsDisplay}\n         </Grid>\n      </div>\n   )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { makeLinkForBlob, createConfig } from \"../functions\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { addPlay } from \"./store/studentReducer\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { styled } from \"@material-ui/core/styles\"\nimport {\n   CircularProgress,\n   CardHeader,\n   DialogActions,\n   Dialog,\n   DialogTitle,\n   DialogContent,\n   DialogContentText,\n   Box,\n} from \"@material-ui/core\"\nimport {\n   primaryColor,\n   StyledPlayer,\n   secondaryColor,\n   TightCard,\n   TightButton,\n   ReverseTightButton,\n} from \"./styles\"\n\nconst StyledProgress1 = styled(CircularProgress)({\n   color: `${primaryColor}`,\n})\n\nconst StyledProgress2 = styled(CircularProgress)({\n   color: `${secondaryColor}`,\n})\n\nexport default function PlayMeditation() {\n   const initialState = {\n      teacher: { image_url: \"\", name: \"\" },\n   }\n   const [medData, setMedData] = useState(initialState)\n   const [playTime, setPlayTime] = useState(0)\n   const [success, setSucess] = useState(false)\n   const [pause, setPause] = useState(false)\n   const [percent, setPercent] = useState(0)\n   const userId = useSelector(state => state.student.id)\n   const dispatch = useDispatch()\n   const history = useHistory()\n   const id = useParams().id\n\n   useEffect(() => {\n      async function getMed() {\n         const res = await fetch(`/meditations/${id}`)\n         const data = await res.json()\n         setMedData(data)\n      }\n      getMed()\n   }, [id])\n\n   async function handleListen(successStatement) {\n      const res = await fetch(\n         \"/plays\",\n         createConfig(\"POST\", {\n            student_id: userId,\n            meditation_id: medData.id,\n            length: Math.round(playTime / 60),\n         })\n      )\n      const data = await res.json()\n      dispatch(addPlay(data))\n      setPause(false)\n      setSucess(successStatement)\n      setTimeout(() => history.push(\"/profile\"), 2500)\n   }\n\n   const handleContinue = () => setPause(false)\n\n   return (\n      <TightCard>\n         <CardHeader title={medData.title} />\n         <p>\n            <Box position=\"relative\" display=\"inline-flex\">\n               <StyledProgress2 thickness={4} size={200} value={percent} variant=\"determinate\" />\n               <Box\n                  top={0}\n                  left={0}\n                  bottom={0}\n                  right={0}\n                  position=\"absolute\"\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\">\n                  <div dir=\"rtl\">\n                     <StyledProgress1\n                        flip={false}\n                        thickness={4}\n                        size={100}\n                        value={100 - percent}\n                        variant=\"determinate\"\n                     />\n                  </div>\n               </Box>{\" \"}\n            </Box>\n         </p>\n         {success && (\n            <p>\n               <Dialog open={success}>\n                  {\" \"}\n                  <DialogTitle>{\"Congrats!\"}</DialogTitle>\n                  <DialogContent>\n                     <DialogContentText>{success}</DialogContentText>\n                  </DialogContent>\n               </Dialog>\n            </p>\n         )}\n\n         <p>{medData.teacher.name}</p>\n         <p>{medData.description}</p>\n         {pause && (\n            <>\n               <Dialog open={pause}>\n                  {\" \"}\n                  <DialogTitle>Paused</DialogTitle>\n                  <DialogContent>\n                     <DialogContentText>Would you like to continue your session?</DialogContentText>\n                  </DialogContent>\n                  <DialogActions>\n                     <TightButton onClick={handleContinue}>Continue</TightButton>\n                     <ReverseTightButton onClick={() => handleListen(\"Every minute counts!\")}>\n                        End{\" \"}\n                     </ReverseTightButton>\n                     <TightButton onClick={() => history.push(\"/profile\")}>Discard</TightButton>\n                  </DialogActions>\n               </Dialog>\n            </>\n         )}\n         <StyledPlayer\n            onPause={() => setPause(true)}\n            onProgress={state => {\n               setPercent(Math.round(state.played * 100))\n               setPlayTime(state.playedSeconds)\n            }}\n            onSeek={() => setPause(false)}\n            onEnded={() => handleListen(\"Congrats on finishing!\")}\n            playing={true}\n            controls={true}\n            height=\"50px\"\n            width=\"100%\"\n            url={makeLinkForBlob(medData.audio_file)}\n         />\n      </TightCard>\n   )\n}\n","import \"./App.css\"\nimport Landing from \"./components/Landing\"\nimport ProfilePage from \"./components/ProfilePage\"\nimport CreatePage from \"./components/CreatePage\"\nimport SearchMeditations from \"./components/SearchMeditations\"\nimport LogInPage from \"./components/LogInPage\"\nimport SignUpPage from \"./components/SignUpPage\"\nimport InteractPage from \"./components/InteractPage\"\nimport Navbar from \"./components/Navbar\"\nimport ViewTeacher from \"./components/ViewTeacher\"\nimport PlayMeditation from \"./components/PlayMeditation\"\nimport { Container } from \"@material-ui/core\"\nimport { Route, Switch } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport { primaryColor, secondaryColor } from \"./components/styles\"\nimport { useEffect } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { loginT } from \"./components/store/teacherReducer\"\nimport { loginS } from \"./components/store/studentReducer\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst StyledDiv = styled(\"div\")({\n   background: `linear-gradient(45deg, ${primaryColor} 30%, ${secondaryColor} 90%)`,\n   padding: \"100px\",\n   align: \"center\",\n   textAlign: \"center\",\n})\n\nfunction App() {\n   let user = useSelector(state => (state.student.name === \"\" ? state.teacher : state.student))\n   const dispatch = useDispatch()\n\n   useEffect(() => {\n      async function handleRefresh() {\n         const res = await fetch(\"/me\")\n         const data = await res.json()\n         console.log(data)\n         if (data !== null) {\n            data.image_url ? dispatch(loginT(data)) : dispatch(loginS(data))\n         }\n      }\n      handleRefresh()\n   }, [])\n\n   if (user.name === \"\" || user.name === undefined) {\n      return (\n         <StyledDiv>\n            <br />\n            <Switch>\n               <Container maxWidth=\"sm\">\n                  <Route exact path=\"/\" component={LogInPage} />\n                  <Route path=\"/signup\" exact component={SignUpPage} />\n               </Container>\n            </Switch>\n            <br />\n         </StyledDiv>\n      )\n   }\n\n   return (\n      <div className=\"App\">\n         <nav>\n            <Navbar />\n         </nav>\n         <main>\n            <Route path=\"/create\" component={CreatePage} />\n\n            <Route path=\"/landing\" component={Landing} />\n\n            <Route path=\"/profile\" component={ProfilePage} />\n\n            <Route path=\"/search\" component={SearchMeditations} />\n\n            <Route exact path=\"/playingnow/:id\" component={PlayMeditation} />\n\n            <Route exact path=\"/teachers/:id\" component={ViewTeacher} />\n\n            <Route exact path=\"/interact\" component={InteractPage} />\n         </main>\n      </div>\n   )\n}\n\nexport default App\n","import { configureStore } from \"@reduxjs/toolkit\"\nimport teacherReducer from \"./teacherReducer\"\nimport studentReducer from \"./studentReducer\"\n\nexport default configureStore({\n   reducer: {\n      teacher: teacherReducer,\n      student: studentReducer,\n   },\n})\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport gloablstore from \"./components/store/gloablstore\"\n\nReactDOM.render(\n   <Provider store={gloablstore}>\n      <BrowserRouter>\n         <App />\n      </BrowserRouter>\n   </Provider>,\n   document.getElementById(\"root\")\n)\n"],"sourceRoot":""}