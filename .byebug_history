exit
plays.collect {|p| PlaySerializer.new(p)}
plays.collect {|p| PlaySeraializer.new(p)}
plays
PlaySerializer.new(object.plays.first)
object.plays.first
plays
recent_plays
exit
Chat.all.select {|c| c.teacher_id == params[:id].to_i}
Chat.all.select {|c| c.teacher_id == params[:id]}
Chat.all.select {|c| c.teacher_id == params[:id])}
Chat.select(:teacher_id == params[:id].to_i)
Chat.select(:teacher_id == params[:id].to_n)
params[:id]
Chat.all.select(:teacher_id == params[:id])
Chat.all
Chat.all.select {|c| c.teacher_id == params[:id]}
exit
Chat.all.select {|c| c.teacher_id == params[:id]}
Chat.select {|c| c.teacher_id == params[:id]}
params[:id]
params
chats = Chat.where(:teacher_id == params[:id])
Chats.where(teacher_id == params[:id])
c
exit
exitt
exit
Chat.all.where(:student_id ==params[:id])
Chat.all
Chat.all.select {|c| c.student_id == params[:id]}
params
exit
params
message
exit
object.meditations.map {|m| m.plays.length}.reduce(:+)
object.meditations.map {|m| m.plays.length}
object.meditations.first.plays
object.meditations.first
c
final
exit
object.plays.first.meditation
object.plays.first
object.plays.first)
object.plays.first.select(:meditation)
object.plays.select(:meditations)
plays
exit
plays.merge!(plays.map {|p| p.meditation})
plays.merge!(plays.map {|p| p.meditation}
exit
meditations
meditations =  plays.map {|p| p.meditation}
plays.map {|p| p.meditation}
object.plays.first.meditation 
object.plays.first(5) 
plays.map {|p| p[:meditation]= p.meditation}
plays
object
c
med_params
params
exit
params
c
params
med_params
params
oarans
exit
params
exit
params[:meditation]
params["meditation"]
params["meditation]
params
exit
params
exit
params
exit
params
med_params
params
exit
med_params
exit
med_params
exit
params[:audio_file]
audio_file
params[:formData]
params.permit(:formData)
params.permitted(:formData)params.permit(:formData)
params.permitted(:formData)
params[:formData]
params
exit
params[:audio_file]
audio_file
params
exit
params[:audio_file]
params
exit
params
med_params[:audio_file]
exit
med_params[:audio_file]
params[:audio_file]
params
exit
params
self
exit
params[:listening]
params.audio_file
med_params[:audio_file]
med_params
exit
med_params[:audio_file]
params[:audio_file]
audio_file
med_params
params
meditation
exit
params
med_params
params[:audio_file]
meditation.audio_file.attached?
meditation
exit
object.audio_file.attached?
object
object.attached?
object?.attached?
object?attached
audio.attached?
object.attachments
object
object.attached?
object
exit
self
@object
exit
self.attached?
@object.attached?
self
@object
@object.self
@object
@object.id
exit
@object.id
@object
self.id
self
Meditation.find(params[:id])
exit
url_for(self.audio_file)
self
self.audio_file
self
slef
params
